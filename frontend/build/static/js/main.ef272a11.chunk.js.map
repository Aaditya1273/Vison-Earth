{"version":3,"sources":["components/Layout.tsx","components/WeatherMapOptions.tsx","pages/SimpleEarthViewerFallback.tsx","pages/EarthViewerPage.tsx","pages/AnomalyDashboardPage.tsx","pages/DataCatalogPage.tsx","pages/SettingsPage.tsx","pages/NotFoundPage.tsx","pages/TestPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","_ref","children","theme","useTheme","navigate","useNavigate","location","useLocation","isMobile","useMediaQuery","breakpoints","down","drawerOpen","setDrawerOpen","useState","menuItems","text","icon","React","createElement","EarthIcon","path","DashboardIcon","CatalogIcon","SettingsIcon","Fragment","Toolbar","Typography","IconButton","ChevronLeftIcon","Divider","List","map","item","ListItem","button","key","onClick","selected","pathname","sx","&.Mui-selected","backgroundColor","&:hover","ListItemIcon","ListItemText","primary","Box","display","height","component","flexGrow","p","width","overflow","transition","transitions","create","easing","sharp","duration","leavingScreen","WeatherMapOptions","activeLayer","onLayerChange","layers","id","label","Satellite","CheckIcon","HdIcon","RadarIcon","PrecipitationIcon","WindIcon","TemperatureIcon","HumidityIcon","PressureIcon","Paper","elevation","position","left","top","zIndex","alpha","backdropFilter","borderRadius","border","variant","fontWeight","color","layer","py","minWidth","primaryTypographyProps","fontSize","SimpleEarthViewerFallback","alignItems","padding","transform","maxWidth","flexDirection","justifyContent","background","boxShadow","margin","right","bottom","mb","textAlign","EarthViewerPage","loading","setLoading","error","setError","setActiveLayer","weatherData","setWeatherData","weatherLoading","setWeatherLoading","weatherError","setWeatherError","selectedLocation","setSelectedLocation","isPlaying","setIsPlaying","cesiumContainerRef","useRef","viewerRef","switchLayer","layerName","viewer","current","console","isDestroyed","log","concat","retryCount","maxRetries","clearLayers","imageryLayers","length","remove","get","layerError","setTimeout","warn","fixedDate","temperatureLayer","addImageryProvider","window","Cesium","WebMapTileServiceImageryProvider","url","style","format","tileMatrixSetID","maximumLevel","credit","brightness","contrast","hue","precipitationLayer","cloudLayer","fallbackProvider","TileMapServiceImageryProvider","buildModuleUrl","fallbackError","useEffect","async","isWebGLSupported","_gl$getExtension","canvas","document","gl","getContext","debugInfo","getExtension","vendor","getParameter","UNMASKED_VENDOR_WEBGL","renderer","UNMASKED_RENDERER_WEBGL","missingExtensions","filter","ext","join","maxTextureSize","MAX_TEXTURE_SIZE","loseContext","e","Ion","defaultAccessToken","process","Viewer","terrainProvider","CesiumTerrainProvider","IonResource","fromAssetId","imageryProvider","ImageryLayer","IonImageryProvider","baseLayerPicker","geocoder","homeButton","infoBox","sceneModePicker","selectionIndicator","timeline","navigationHelpButton","animation","creditContainer","fullscreenButton","requestRenderMode","targetFrameRate","scene","globe","enableLighting","baseColor","Color","TRANSPARENT","camera","setView","destination","Cartesian3","fromDegrees","orientation","heading","pitch","Math","PI_OVER_TWO","roll","addEventListener","event","preventDefault","requestRender","initError","initCesium","_viewerRef$current$ca","_viewerRef$current$sc","clock","onTick","removeAll","flyTo","cancelFlight","entities","destroy","bgcolor","ref","gap","Tooltip","title","placement","size","mt","handleZoomIn","cameraHeight","positionCartographic","zoomIn","handleZoomOut","zoomOut","togglePlayPause","shouldAnimate","CircularProgress","mockAnomalies","type","coordinates","detectionDate","Date","severity","status","confidenceScore","description","imageUrl","getSeverityColor","AnomalyDashboardPage","view","searchQuery","setSearchQuery","typeFilter","setTypeFilter","severityFilter","setSeverityFilter","statusFilter","setStatusFilter","dateRange","setDateRange","filteredAnomalies","anomaly","toLowerCase","includes","today","toDateString","weekAgo","setDate","getDate","monthAgo","setMonth","getMonth","gutterBottom","Grid","container","spacing","xs","md","my","LinearProgress","value","a","reduce","acc","cur","toFixed","TextField","fullWidth","placeholder","onChange","target","InputProps","startAdornment","InputAdornment","Search","FormControl","InputLabel","Select","labelId","MenuItem","ButtonGroup","Button","TableChartOutlined","MapOutlined","BarChartOutlined","Tabs","handleViewChange","_event","newValue","aria-label","Tab","lg","Card","CardMedia","image","alt","CardContent","replace","l","toUpperCase","Chip","Stack","direction","Warning","Info","ErrorOutline","RestoreOutlined","CheckCircleOutline","getStatusIcon","pt","startIcon","NavigateBefore","endIcon","NavigateNext","DataCatalogPage","groupedSources","name","updateFrequency","resolution","coverage","source","push","Container","paragraph","Object","entries","sources","objectFit","flexWrap","SettingsPage","settings","setSettings","dataSourceRefreshInterval","enableNotifications","notificationsForAnomalyDetection","notificationsForDataUpdates","maxQualityMode","defaultLocation","lat","lng","zoom","cesiumToken","apiEndpoints","weather","satellite","anomalies","highResImagery","weatherOverlay","countryBorders","autoRefresh","dataSource","limitFrameRate","reduceAnimations","cloudSync","saved","setSaved","handleChange","_objectSpread","[object Object]","handleNestedChange","parent","prevSettings","handleCheckboxChange","setting","Alert","FormControlLabel","control","Switch","checked","Slider","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","pl","disabled","handleSaveSettings","clearCache","mr","resetSettings","NotFoundPage","Link","to","TestPage","queryClient","QueryClient","createTheme","palette","mode","main","secondary","default","paper","typography","fontFamily","h1","h2","h3","components","MuiCssBaseline","styleOverrides","body","App","QueryClientProvider","client","ThemeProvider","CssBaseline","Router","Routes","Route","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ef272a11.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport {\n  AppBar,\n  Box,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n  Divider,\n  useTheme,\n  useMediaQuery,\n} from '@mui/material';\nimport Logo from './Logo';\nimport {\n  Menu as MenuIcon,\n  Public as EarthIcon,\n  Dashboard as DashboardIcon,\n  Storage as CatalogIcon,\n  Settings as SettingsIcon,\n  Notifications as NotificationsIcon,\n  Search as SearchIcon,\n  ChevronLeft as ChevronLeftIcon,\n  Home as HomeIcon,\n  Brightness4 as DarkModeIcon,\n  Brightness7 as LightModeIcon,\n} from '@mui/icons-material';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nconst DRAWER_WIDTH = 240;\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  \n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    // Sidebar toggle disabled\n    // setDrawerOpen(!drawerOpen);\n  };\n\n  const getPageTitle = () => {\n    switch (location.pathname) {\n      case '/':\n        return 'Earth Viewer';\n      case '/anomalies':\n        return 'Anomaly Dashboard';\n      case '/catalog':\n        return 'Data Catalog';\n      case '/settings':\n        return 'Settings';\n      default:\n        return 'VisionEarth';\n    }\n  };\n\n  const menuItems = [\n    { text: 'Earth Viewer', icon: <EarthIcon />, path: '/' },\n    { text: 'Anomaly Dashboard', icon: <DashboardIcon />, path: '/anomalies' },\n    { text: 'Data Catalog', icon: <CatalogIcon />, path: '/catalog' },\n    { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\n  ];\n\n  const drawer = (\n    <>\n      <Toolbar sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n        <Typography variant=\"h6\" noWrap component=\"div\">\n          VisionEarth\n        </Typography>\n        {isMobile && (\n          <IconButton onClick={handleDrawerToggle}>\n            <ChevronLeftIcon />\n          </IconButton>\n        )}\n      </Toolbar>\n      <Divider />\n      <List>\n        {menuItems.map((item) => (\n          <ListItem\n            button\n            key={item.text}\n            onClick={() => navigate(item.path)}\n            selected={location.pathname === item.path}\n            sx={{\n              '&.Mui-selected': {\n                backgroundColor: 'rgba(92, 187, 242, 0.2)',\n                '&:hover': {\n                  backgroundColor: 'rgba(92, 187, 242, 0.3)',\n                },\n              },\n            }}\n          >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box sx={{ position: 'absolute', bottom: 0, width: '100%', p: 2 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          © 2025 VisionEarth\n        </Typography>\n      </Box>\n    </>\n  );\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      {/* Top AppBar removed */}\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 0,\n          width: '100%',\n          height: '100vh',\n          overflow: 'hidden',\n          transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n          }),\n        }}\n      >\n        <Toolbar /> {/* Spacer for the AppBar */}\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  alpha\n} from '@mui/material';\nimport {\n  Satellite,\n  Check as CheckIcon,\n  Hd as HdIcon,\n  Radar as RadarIcon,\n  WaterDrop as PrecipitationIcon,\n  Air as WindIcon,\n  Thermostat as TemperatureIcon,\n  Opacity as HumidityIcon,\n  Speed as PressureIcon\n} from '@mui/icons-material';\n\ninterface WeatherMapOptionsProps {\n  activeLayer: string;\n  onLayerChange: (layer: string) => void;\n}\n\nconst WeatherMapOptions: React.FC<WeatherMapOptionsProps> = ({ activeLayer, onLayerChange }) => {\n  const layers = [\n    { id: 'Satellite', label: 'Satellite', icon: <Satellite /> },\n    { id: 'Live', label: 'Live', icon: <CheckIcon /> },\n    { id: 'HD', label: 'HD', icon: <HdIcon /> },\n    { id: 'Radar', label: 'Radar', icon: <RadarIcon /> },\n    { id: 'Precipitation', label: 'Precipitation', icon: <PrecipitationIcon /> },\n    { id: 'Wind', label: 'Wind', icon: <WindIcon /> },\n    { id: 'Temperature', label: 'Temperature', icon: <TemperatureIcon /> },\n    { id: 'Humidity', label: 'Humidity', icon: <HumidityIcon /> },\n    { id: 'Pressure', label: 'Pressure', icon: <PressureIcon /> },\n  ];\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        position: 'absolute',\n        left: 16,\n        top: 16,\n        zIndex: 1000,\n        width: 200,\n        backgroundColor: alpha('#000000', 0.7),\n        backdropFilter: 'blur(8px)',\n        borderRadius: 2,\n        overflow: 'hidden',\n        border: '1px solid rgba(255, 255, 255, 0.1)',\n      }}\n    >\n      <Box sx={{ p: 2, backgroundColor: alpha('#000000', 0.5) }}>\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"white\">\n          WEATHER MAPS\n        </Typography>\n      </Box>\n      <Divider />\n      <List sx={{ p: 0 }}>\n        {layers.map((layer) => (\n          <ListItem\n            key={layer.id}\n            button\n            selected={activeLayer === layer.id}\n            onClick={() => onLayerChange(layer.id)}\n            sx={{\n              py: 1,\n              '&.Mui-selected': {\n                backgroundColor: alpha('#ffffff', 0.15),\n                '&:hover': {\n                  backgroundColor: alpha('#ffffff', 0.2),\n                },\n              },\n              '&:hover': {\n                backgroundColor: alpha('#ffffff', 0.1),\n              },\n            }}\n          >\n            <ListItemIcon sx={{ minWidth: 36, color: 'white' }}>\n              {layer.icon}\n            </ListItemIcon>\n            <ListItemText \n              primary={layer.label} \n              primaryTypographyProps={{ \n                color: 'white',\n                fontSize: '0.9rem'\n              }} \n            />\n            {activeLayer === layer.id && (\n              <CheckIcon fontSize=\"small\" sx={{ color: 'white' }} />\n            )}\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default WeatherMapOptions;\n","import React from 'react';\nimport { Box, Typography } from '@mui/material';\n\n/**\n * A simple fallback Earth viewer that displays a static Earth image\n * This is used when the Cesium viewer fails to load\n */\nconst SimpleEarthViewerFallback: React.FC = () => {\n  return (\n    <Box sx={{ \n      height: '100%', \n      width: '100%', \n      position: 'relative', \n      overflow: 'hidden',\n      backgroundColor: '#000'\n    }}>\n      {/* Vision Earth logo in top left corner */}\n      <Box \n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          zIndex: 100,\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          padding: '5px 10px',\n          borderRadius: '4px'\n        }}\n      >\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold', color: '#1976d2' }}>\n          Vision Earth\n        </Typography>\n      </Box>\n      \n      {/* Fallback Earth image */}\n      <Box sx={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '80%',\n        maxWidth: '800px',\n        height: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        {/* Earth globe representation */}\n        <Box sx={{\n          width: '300px',\n          height: '300px',\n          borderRadius: '50%',\n          background: 'radial-gradient(circle at 30% 30%, #4286f4, #373B44)',\n          boxShadow: '0 0 30px rgba(0,100,255,0.5)',\n          position: 'relative',\n          overflow: 'hidden',\n          margin: '0 auto 30px auto'\n        }}>\n          {/* Simple continents approximation */}\n          <Box sx={{\n            position: 'absolute',\n            backgroundColor: '#3e8c61',\n            width: '100px',\n            height: '150px',\n            top: '70px',\n            left: '50px',\n            borderRadius: '40%',\n          }}/>\n          <Box sx={{\n            position: 'absolute',\n            backgroundColor: '#3e8c61',\n            width: '130px',\n            height: '90px',\n            top: '50px',\n            right: '30px',\n            borderRadius: '30%',\n          }}/>\n          <Box sx={{\n            position: 'absolute',\n            backgroundColor: '#3e8c61',\n            width: '80px',\n            height: '120px',\n            bottom: '40px',\n            right: '70px',\n            borderRadius: '40%',\n          }}/>\n        </Box>\n        \n        <Typography variant=\"h5\" sx={{ color: 'white', mb: 2, textAlign: 'center' }}>\n          Earth Viewer\n        </Typography>\n        \n        <Typography variant=\"body1\" sx={{ color: 'white', textAlign: 'center', maxWidth: '600px' }}>\n          The 3D Earth visualization couldn't be loaded. Please check your browser compatibility and WebGL support.\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SimpleEarthViewerFallback;\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box, Paper, Typography, Button, CircularProgress, Tooltip, IconButton, Slider\n} from '@mui/material';\nimport WeatherMapOptions from '../components/WeatherMapOptions';\nimport SimpleEarthViewerFallback from './SimpleEarthViewerFallback';\nimport { getCurrentWeather, CurrentWeather } from '../services/weatherService';\n\n// Define the window interface extension for Cesium global object\ndeclare global {\n  interface Window {\n    Cesium: any;\n    CESIUM_BASE_URL: string;\n    CESIUM_LOADED: boolean;\n    CESIUM_READY: Promise<any>;\n    CESIUM_RESOLVE: (value: any) => void;\n    CESIUM_REJECT: (reason?: any) => void;\n  }\n}\n\n// Cesium Ion access token - using a default token that should work for development\n// In production, use environment variables\nconst CESIUM_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlYWE1OWUxNy1mMWZiLTQzYjYtYTQ0OS1kMWFjYmFkNjc5YzciLCJpZCI6NTc3MzMsImlhdCI6MTYyMjY0NjQ5NH0.XcKpgANiY19MC4bdFUXMVEBToBmBLjssJwHxjN-SGWo';\n\n// Weather layer icons (using emoji for now)\nconst LAYER_ICONS: Record<string, string> = {\n  'Satellite': '🛰️',\n  'Live': '✓',\n  'HD': '🔍',\n  'Radar': '📡',\n  'Precipitation': '🌧️',\n  'Wind': '💨',\n  'Temperature': '🌡️',\n  'Humidity': '💧',\n  'Pressure': '⭕',\n};\n\nconst EarthViewerPage: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeLayer, setActiveLayer] = useState('Satellite');\n  const [weatherData, setWeatherData] = useState<CurrentWeather | null>(null);\n  const [weatherLoading, setWeatherLoading] = useState(false);\n  const [weatherError, setWeatherError] = useState<string | null>(null);\n  const [selectedLocation, setSelectedLocation] = useState<{lat: number, lon: number, name: string} | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  \n  const cesiumContainerRef = useRef<HTMLDivElement>(null);\n  const viewerRef = useRef<any>(null);\n  const weatherEntityRef = useRef<any>(null);\n\n  // Function to check if WebGL is supported with detailed diagnostics\n  const isWebGLSupported = (): boolean => {\n    try {\n      console.log('Checking WebGL support...');\n      const canvas = document.createElement('canvas');\n      \n      // Try to get WebGL 2.0 context first (preferred)\n      let gl: WebGLRenderingContext | WebGL2RenderingContext | null = canvas.getContext('webgl2');\n      \n      if (!gl) {\n        console.log('WebGL 2.0 not available, falling back to WebGL 1.0');\n        // Fall back to WebGL 1.0\n        gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl') as WebGLRenderingContext | null;\n      } else {\n        console.log('WebGL 2.0 is supported');\n      }\n      \n      if (!gl) {\n        console.error('Failed to get WebGL context');\n        return false;\n      }\n      \n      // Get WebGL info for diagnostics\n      const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\n      if (debugInfo) {\n        const vendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);\n        const renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\n        console.log(`WebGL Vendor: ${vendor}`);\n        console.log(`WebGL Renderer: ${renderer}`);\n      }\n      \n      // Check for required extensions\n      const requiredExtensions = ['OES_texture_float', 'OES_element_index_uint'];\n      const missingExtensions = requiredExtensions.filter(ext => !gl.getExtension(ext));\n      \n      if (missingExtensions.length > 0) {\n        console.warn(`Missing WebGL extensions: ${missingExtensions.join(', ')}`);\n        // Continue anyway, as Cesium has fallbacks for some extensions\n      }\n      \n      // Get max texture size for diagnostics\n      const maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      console.log(`WebGL Max Texture Size: ${maxTextureSize}`);\n      \n      // Clean up\n      gl.getExtension('WEBGL_lose_context')?.loseContext();\n      \n      console.log('WebGL is supported');\n      return true;\n    } catch (e) {\n      console.error('Error checking WebGL support:', e);\n      return false;\n    }\n  };\n  \n  // Function to fetch weather data for a specific location\n  const fetchWeatherData = async (lat: number, lon: number, locationName: string = 'Selected Location') => {\n    try {\n      setWeatherLoading(true);\n      setWeatherError(null);\n      const data = await getCurrentWeather(lat, lon);\n      if (data) {\n        setWeatherData(data);\n        \n        // Add a marker for the weather location\n        if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n          addWeatherMarker(lat, lon, data);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setWeatherError('Failed to fetch weather data');\n    } finally {\n      setWeatherLoading(false);\n    }\n  };\n  \n  // Function to add a weather marker to the map\n  const addWeatherMarker = (lat: number, lon: number, weather: CurrentWeather) => {\n    if (!viewerRef.current || viewerRef.current.isDestroyed()) return;\n    \n    const viewer = viewerRef.current;\n    \n    // Remove existing weather entity if any\n    if (weatherEntityRef.current) {\n      viewer.entities.remove(weatherEntityRef.current);\n    }\n    \n    // Create a custom pin with weather info\n    const pinBuilder = new window.Cesium.PinBuilder();\n    \n    // Get weather icon\n    const weatherIconUrl = getWeatherIconUrl(weather.weathercode);\n    \n    // Create a pin with the weather icon\n    const weatherPin = pinBuilder.fromUrl(weatherIconUrl, window.Cesium.Color.WHITE, 48);\n    \n    // Add the entity to the viewer\n    weatherEntityRef.current = viewer.entities.add({\n      name: `Weather at ${lat.toFixed(2)}, ${lon.toFixed(2)}`,\n      position: window.Cesium.Cartesian3.fromDegrees(lon, lat),\n      billboard: {\n        image: weatherPin,\n        verticalOrigin: window.Cesium.VerticalOrigin.BOTTOM,\n        heightReference: window.Cesium.HeightReference.CLAMP_TO_GROUND\n      },\n      label: {\n        text: `${weather.temperature}°C\\nWind: ${weather.windspeed} km/h`,\n        font: '14px sans-serif',\n        style: window.Cesium.LabelStyle.FILL_AND_OUTLINE,\n        outlineWidth: 2,\n        verticalOrigin: window.Cesium.VerticalOrigin.TOP,\n        pixelOffset: new window.Cesium.Cartesian2(0, -50),\n        heightReference: window.Cesium.HeightReference.CLAMP_TO_GROUND\n      }\n    });\n  };\n  \n  // Helper function to get weather icon URL based on weather code\n  const getWeatherIconUrl = (code: number): string => {\n    // Map weather codes to icon URLs\n    // This is a simplified version - in a real app, you'd have a more complete mapping\n    if (code < 300) {\n      return 'https://cdn.weatherapi.com/weather/64x64/day/386.png'; // Thunderstorm\n    } else if (code < 500) {\n      return 'https://cdn.weatherapi.com/weather/64x64/day/263.png'; // Drizzle\n    } else if (code < 600) {\n      return 'https://cdn.weatherapi.com/weather/64x64/day/308.png'; // Rain\n    } else if (code < 700) {\n      return 'https://cdn.weatherapi.com/weather/64x64/day/338.png'; // Snow\n    } else if (code < 800) {\n      return 'https://cdn.weatherapi.com/weather/64x64/day/248.png'; // Atmosphere (fog, mist)\n    } else if (code === 800) {\n      return 'https://cdn.weatherapi.com/weather/64x64/day/113.png'; // Clear\n    } else {\n      return 'https://cdn.weatherapi.com/weather/64x64/day/116.png'; // Clouds\n    }\n  };\n  \n  // Function to switch between different imagery layers\n  const switchLayer = (layerName: string) => {\n    try {\n      const viewer = viewerRef.current;\n      if (!viewer) {\n        console.error('Cannot switch layer: Cesium viewer not initialized');\n        return;\n      }\n      \n      if (viewer.isDestroyed()) {\n        console.error('Cannot switch layer: Cesium viewer has been destroyed');\n        return;\n      }\n      \n      setActiveLayer(layerName);\n      console.log(`Switching to layer: ${layerName}`);\n\n      // Remove all existing imagery layers with robust error handling\n      let retryCount = 0;\n      const maxRetries = 3;\n      \n      const clearLayers = () => {\n        try {\n          while (viewer.imageryLayers.length > 0) {\n            viewer.imageryLayers.remove(viewer.imageryLayers.get(0));\n          }\n          return true;\n        } catch (layerError) {\n          console.error(`Error removing existing imagery layers (attempt ${retryCount + 1}/${maxRetries}):`, layerError);\n          retryCount++;\n          if (retryCount < maxRetries) {\n            // Small delay before retry\n            setTimeout(clearLayers, 100);\n            return false;\n          }\n          // Continue anyway after max retries\n          console.warn('Failed to clear all imagery layers after maximum retries, continuing anyway');\n          return false;\n        }\n      };\n      \n      clearLayers();\n\n      // Use hardcoded date for NASA GIBS imagery to ensure availability\n      // This date (2025-06-03) is known to have valid imagery data\n      // Using a fixed date prevents issues with missing or stale tiles\n      const fixedDate = '2025-06-03';\n      console.log('Using fixed date for imagery:', fixedDate);\n\n      // Add the selected layer\n      switch (layerName) {\n      case 'Temperature':\n        // Add temperature overlay\n        const temperatureLayer = viewer.imageryLayers.addImageryProvider(\n          new window.Cesium.WebMapTileServiceImageryProvider({\n            url: `https://gibs.earthdata.nasa.gov/wmts/epsg3857/best/MODIS_Terra_Land_Surface_Temp_Day/default/${fixedDate}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png`,\n            layer: 'MODIS_Terra_Land_Surface_Temp_Day',\n            style: 'default',\n            format: 'image/png',\n            tileMatrixSetID: 'GoogleMapsCompatible_Level7',\n            maximumLevel: 7,\n            credit: 'NASA MODIS Temperature Data'\n          })\n        );\n        \n        // Set transparency and coloring\n        if (temperatureLayer) {\n          temperatureLayer.alpha = 0.6;  // Semi-transparent\n          temperatureLayer.brightness = 1.5;\n          temperatureLayer.contrast = 1.2;\n          temperatureLayer.hue = 0.0;  // Red hue for temperature\n        }\n        break;\n        \n      case 'Precipitation':\n        // Add precipitation overlay\n        const precipitationLayer = viewer.imageryLayers.addImageryProvider(\n          new window.Cesium.WebMapTileServiceImageryProvider({\n            url: `https://gibs.earthdata.nasa.gov/wmts/epsg3857/best/IMERG_Precipitation_Rate/default/${fixedDate}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png`,\n            layer: 'IMERG_Precipitation_Rate',\n            style: 'default',\n            format: 'image/png',\n            tileMatrixSetID: 'GoogleMapsCompatible_Level7',\n            maximumLevel: 7,\n            credit: 'NASA IMERG Precipitation Data'\n          })\n        );\n        \n        // Set transparency and coloring\n        if (precipitationLayer) {\n          precipitationLayer.alpha = 0.7;  // Semi-transparent\n          precipitationLayer.brightness = 1.3;\n          precipitationLayer.contrast = 1.0;\n          precipitationLayer.hue = 0.6;  // Blue hue for precipitation\n        }\n        break;\n        \n      case 'Clouds':\n        // Add cloud overlay\n        const cloudLayer = viewer.imageryLayers.addImageryProvider(\n          new window.Cesium.WebMapTileServiceImageryProvider({\n            url: `https://gibs.earthdata.nasa.gov/wmts/epsg3857/best/MODIS_Terra_Cloud_Top_Temp_Day/default/${fixedDate}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png`,\n            layer: 'MODIS_Terra_Cloud_Top_Temp_Day',\n            style: 'default',\n            format: 'image/png',\n            tileMatrixSetID: 'GoogleMapsCompatible_Level7',\n            maximumLevel: 7,\n            credit: 'NASA MODIS Cloud Data'\n          })\n        );\n        \n        // Set transparency and coloring\n        if (cloudLayer) {\n          cloudLayer.alpha = 0.7;  // Semi-transparent\n          cloudLayer.brightness = 1.8;\n          cloudLayer.contrast = 1.0;\n          cloudLayer.hue = 0.7; // White-blue hue for clouds\n        }\n        break;\n        \n      case 'Satellite':\n      default:\n        // For satellite view, use VIIRS_SNPP imagery\n        viewer.imageryLayers.addImageryProvider(\n          new window.Cesium.WebMapTileServiceImageryProvider({\n            url: `https://gibs.earthdata.nasa.gov/wmts/epsg3857/best/VIIRS_SNPP_CorrectedReflectance_TrueColor/default/${fixedDate}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.jpg`,\n            layer: 'VIIRS_SNPP_CorrectedReflectance_TrueColor',\n            style: 'default',\n            format: 'image/jpeg',\n            tileMatrixSetID: 'GoogleMapsCompatible_Level8',\n            maximumLevel: 8,\n            credit: 'NASA VIIRS SNPP'\n          })\n        );\n        break;\n      }\n    } catch (error) {\n      console.error('Error switching layer:', error);\n      \n      // Try to recover with a fallback imagery provider if NASA GIBS fails\n      try {\n        console.log('Attempting to recover with fallback imagery provider');\n        const viewer = viewerRef.current;\n        if (viewer) {\n          // Clear any remaining layers\n          while (viewer.imageryLayers.length > 0) {\n            viewer.imageryLayers.remove(viewer.imageryLayers.get(0));\n          }\n          \n          // Add a simple Cesium Natural Earth II imagery as fallback\n          const fallbackProvider = new window.Cesium.TileMapServiceImageryProvider({\n            url: window.Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII'),\n            maximumLevel: 5,\n            credit: 'Cesium Natural Earth II'\n          });\n          \n          viewer.imageryLayers.addImageryProvider(fallbackProvider);\n          console.log('Fallback imagery provider added successfully');\n        }\n      } catch (fallbackError) {\n        console.error('Fallback imagery provider also failed:', fallbackError);\n        setError('Failed to switch to the selected layer. Please try again.');\n      }\n    }\n  };\n  \n  // Main effect for Cesium initialization (runs once on mount)\n  useEffect(() => {\n    const initCesium = async () => {\n      setLoading(true);\n      setError(null);\n      console.log('EarthViewerPage mounted, initializing Cesium...');\n\n      // Ensure Cesium is loaded globally (e.g., via script tag in index.html)\n      if (!window.Cesium) {\n        console.error('Cesium global object not found. Ensure Cesium.js is loaded before this component.');\n        setError('Cesium library not loaded. Please check console and ensure index.html includes Cesium.js.');\n        setLoading(false);\n        return;\n      }\n\n      if (!isWebGLSupported()) {\n        console.error('WebGL is not supported');\n        setError('WebGL is not supported in your browser. Please try a different browser.');\n        setLoading(false);\n        return;\n      }\n\n      console.log('EarthViewerPage: After WebGL check. Is window.Cesium defined?', window.Cesium);\n      window.Cesium.Ion.defaultAccessToken = process.env.REACT_APP_CESIUM_ACCESS_TOKEN || CESIUM_ACCESS_TOKEN;\n\n      if (cesiumContainerRef.current && !viewerRef.current) {\n        try {\n          console.log('Creating Cesium viewer with target configuration');\n          const viewer = new window.Cesium.Viewer(cesiumContainerRef.current, {\n            terrainProvider: new window.Cesium.CesiumTerrainProvider({\n              url: window.Cesium.IonResource.fromAssetId(1), // Cesium World Terrain\n            }),\n            imageryProvider: new window.Cesium.ImageryLayer(\n              window.Cesium.IonImageryProvider.fromAssetId(3) // Bing Maps Aerial, a common default\n            ),\n            baseLayerPicker: false,\n            geocoder: false,\n            homeButton: false,\n            infoBox: false,\n            sceneModePicker: false,\n            selectionIndicator: false,\n            timeline: false,\n            navigationHelpButton: false,\n            animation: false, // Animation widget\n            creditContainer: document.createElement('div'), // Hide credits\n            fullscreenButton: false,\n            requestRenderMode: false, // Continuous rendering for dynamic data\n            targetFrameRate: 60,\n            // Imagery provider will be set by switchLayer\n          });\n          viewerRef.current = viewer;\n\n          viewer.scene.globe.enableLighting = false;\n          viewer.scene.globe.baseColor = window.Cesium.Color.TRANSPARENT; // Show actual imagery\n\n          viewer.camera.setView({\n            destination: window.Cesium.Cartesian3.fromDegrees(0, 0, 15000000),\n            orientation: {\n              heading: 0.0,\n              pitch: -window.Cesium.Math.PI_OVER_TWO,\n              roll: 0.0\n            }\n          });\n\n          // Add event listener for WebGL context lost\n          viewer.scene.canvas.addEventListener('webglcontextlost', function(event: Event) {\n            console.error('WebGL context lost:', event);\n            setError('WebGL context was lost. Please refresh the page.');\n            if (event.preventDefault) event.preventDefault();\n          }, false);\n\n          // Add event listener for WebGL context restoration\n          viewer.scene.canvas.addEventListener('webglcontextrestored', function(event: Event) {\n            console.log('WebGL context restored:', event);\n            setError(''); // Clear error\n            if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n              viewerRef.current.scene.requestRender();\n            }\n          }, false);\n          \n          // Initial layer will be set by the activeLayer useEffect\n          console.log('Cesium viewer core initialized.');\n          // setLoading(false) will be handled by the activeLayer useEffect after the first layer is loaded.\n\n        } catch (initError) {\n          console.error('Error initializing Cesium viewer:', initError);\n          setError('Failed to initialize Earth Viewer. Check console.');\n          setLoading(false);\n        }\n      }\n    };\n\n    initCesium();\n\n    return () => {\n      // Clean up Cesium viewer when component unmounts\n      if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n        console.log('Destroying Cesium viewer');\n        try {\n          if (viewerRef.current.clock) viewerRef.current.clock.onTick.removeAll();\n          if (viewerRef.current.camera?.flyTo) viewerRef.current.camera.cancelFlight();\n          \n          // Type assertion for canvas if necessary, or ensure it exists\n          const canvas = viewerRef.current.scene?.canvas as HTMLCanvasElement | undefined;\n          if (canvas) {\n             // Removing specific listeners can be tricky if anonymous functions were used.\n             // For simplicity, Cesium's destroy() should handle most internal listeners.\n          }\n\n          if (viewerRef.current.entities) viewerRef.current.entities.removeAll();\n          \n          // Ensure imageryLayers exists before trying to access its length or methods\n          if (viewerRef.current.imageryLayers) {\n            while (viewerRef.current.imageryLayers.length > 0) {\n              viewerRef.current.imageryLayers.remove(viewerRef.current.imageryLayers.get(0), true);\n            }\n          }\n          \n          viewerRef.current.destroy();\n        } catch (error) {\n          console.error('Error during Cesium viewer cleanup:', error);\n        } finally {\n          viewerRef.current = null;\n        }\n      }\n    };\n  }, []); // Empty dependency array ensures this runs only once on mount and unmount\n\n  // Effect for handling activeLayer changes and initial layer loading\n  useEffect(() => {\n    if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n      console.log(`Active layer changed to: ${activeLayer}, applying...`);\n      setLoading(true); // Show loading while switching layers\n      try {\n        switchLayer(activeLayer);\n      } catch (e) {\n        console.error(`Error applying layer ${activeLayer}:`, e);\n        setError(`Failed to apply layer: ${activeLayer}`);\n      } finally {\n        setLoading(false);\n      }\n    } else if (!viewerRef.current && !loading && error === null) {\n      // This case might indicate that the viewer initialization is pending or failed silently\n      // and activeLayer changed. setLoading(true) in initCesium should cover this.\n      console.warn('Attempted to switch layer, but viewer is not ready.');\n    }\n  }, [activeLayer]); // Runs when activeLayer changes (and after initial mount due to state update flow)\n\n  \n  // Handle zoom in\n  const handleZoomIn = () => {\n    if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n      const cameraHeight = viewerRef.current.camera.positionCartographic.height;\n      viewerRef.current.camera.zoomIn(cameraHeight * 0.2);\n    }\n  };\n  \n  // Handle zoom out\n  const handleZoomOut = () => {\n    if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n      const cameraHeight = viewerRef.current.camera.positionCartographic.height;\n      viewerRef.current.camera.zoomOut(cameraHeight * 0.2);\n    }\n  };\n  \n  // Toggle play/pause animation\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    \n    // Control animation if needed\n    if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n      if (!isPlaying) {\n        // Start animation\n        viewerRef.current.clock.shouldAnimate = true;\n      } else {\n        // Stop animation\n        viewerRef.current.clock.shouldAnimate = false;\n      }\n    }\n  };\n\n  // Render the Earth viewer UI\n  return (\n    <Box sx={{ width: '100%', height: '100%', position: 'relative', overflow: 'hidden' }}>\n      {/* If there's an error, show the fallback Earth viewer */}\n      {error && <SimpleEarthViewerFallback />}\n      \n      {/* Only show the main viewer if there's no error */}\n      {!error && (\n        <>\n          {/* Logo Header - Moved to top left corner */}\n          <Box sx={{ \n            position: 'absolute', \n            top: '10px', \n            left: '10px', \n            zIndex: 1000,\n            bgcolor: 'rgba(0, 0, 0, 0.5)',\n            borderRadius: 1,\n            padding: '5px 10px',\n            display: 'flex',\n            alignItems: 'center',\n            backdropFilter: 'blur(5px)'\n          }}>\n            <Typography variant=\"h6\" sx={{ color: 'white', fontWeight: 700 }}>\n              Vision Earth\n            </Typography>\n          </Box>\n          \n          {/* Layer controls - top right */}\n          <Box sx={{ \n            position: 'absolute', \n            top: '10px', \n            right: '10px', \n            zIndex: 1000 \n          }}>\n            <WeatherMapOptions \n              activeLayer={activeLayer} \n              onLayerChange={switchLayer} \n            />\n          </Box>\n        \n          {/* Cesium container */}\n          <div \n            ref={cesiumContainerRef}\n            style={{\n              width: '100%',\n              height: '100%',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n            }}\n          />\n          \n          {/* Right vertical mini toolbar - styled like Zoom Earth */}\n          {!loading && (\n            <Box\n              sx={{\n                position: 'absolute',\n                top: '50%',\n                right: 10,\n                transform: 'translateY(-50%)',\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 1,\n                zIndex: 1000,\n              }}\n            >\n              <Paper\n                elevation={3}\n                sx={{\n                  bgcolor: 'rgba(33, 33, 33, 0.85)',\n                  color: 'white',\n                  borderRadius: 28,\n                  overflow: 'hidden',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  p: 1,\n                }}\n              >\n                <Tooltip title=\"Search\" placement=\"left\">\n                  <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                    🔍\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Settings\" placement=\"left\">\n                  <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                    ⚙️\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Info\" placement=\"left\">\n                  <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                    ℹ️\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Share\" placement=\"left\">\n                  <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                    📤\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Measure\" placement=\"left\">\n                  <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                    📏\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Crosshair\" placement=\"left\">\n                  <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                    ⊕\n                  </IconButton>\n                </Tooltip>\n              </Paper>\n              \n              <Paper\n                elevation={3}\n                sx={{\n                  bgcolor: 'rgba(33, 33, 33, 0.85)',\n                  color: 'white',\n                  borderRadius: 28,\n                  overflow: 'hidden',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  p: 1,\n                  mt: 2\n                }}\n              >\n                <Tooltip title=\"Zoom In\" placement=\"left\">\n                  <IconButton \n                    onClick={handleZoomIn}\n                    size=\"small\" \n                    sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}\n                  >\n                    +\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Zoom Out\" placement=\"left\">\n                  <IconButton \n                    onClick={handleZoomOut}\n                    size=\"small\" \n                    sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}\n                  >\n                    -\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title={isPlaying ? \"Pause\" : \"Play\"} placement=\"left\">\n                  <IconButton \n                    onClick={togglePlayPause}\n                    size=\"small\" \n                    sx={{ color: 'white', width: 40, height: 40 }}\n                  >\n                    {isPlaying ? \"⏸\" : \"▶\"}\n                  </IconButton>\n                </Tooltip>\n              </Paper>\n            </Box>\n          )}\n        </>\n      )}\n      \n      {/* Loading indicator */}\n      {loading && !error && (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 2,\n          }}\n        >\n          <CircularProgress size={60} />\n          <Typography variant=\"h6\" sx={{ color: 'white' }}>\n            Loading Earth Viewer...\n          </Typography>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\n// Export the component\nexport default EarthViewerPage;\n","import React, { useState } from 'react';\nimport { \n  Box, \n  Typography, \n  Grid, \n  Card, \n  CardContent, \n  CardMedia, \n  Chip,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  ButtonGroup,\n  Divider,\n  IconButton,\n  TextField,\n  InputAdornment,\n  Tab,\n  Tabs,\n  Stack,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent,\n  LinearProgress\n} from '@mui/material';\nimport { \n  Search, \n  FilterList, \n  MapOutlined, \n  TableChartOutlined, \n  BarChartOutlined,\n  NavigateNext,\n  NavigateBefore,\n  CalendarToday,\n  Warning,\n  Info,\n  ErrorOutline,\n  CheckCircleOutline,\n  RestoreOutlined\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\n\n// Mock data for anomalies\nconst mockAnomalies = [\n  {\n    id: 1,\n    type: 'wildfire',\n    location: 'Amazon Rainforest, Brazil',\n    coordinates: [-59.85, -2.91],\n    detectionDate: new Date(2025, 4, 22),\n    severity: 'high',\n    status: 'detected',\n    confidenceScore: 0.94,\n    description: 'Active wildfire detected covering approximately 3.2 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1615414037094-494fa44a6f50?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2071&q=80'\n  },\n  {\n    id: 2,\n    type: 'deforestation',\n    location: 'Congo Basin, DRC',\n    coordinates: [23.65, -0.23],\n    detectionDate: new Date(2025, 4, 20),\n    severity: 'medium',\n    status: 'verified',\n    confidenceScore: 0.89,\n    description: 'Detected significant forest clearing activities covering 5.7 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1621451497513-28595d129eef?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80'\n  },\n  {\n    id: 3,\n    type: 'oil_spill',\n    location: 'Gulf of Mexico',\n    coordinates: [-90.28, 28.73],\n    detectionDate: new Date(2025, 4, 18),\n    severity: 'high',\n    status: 'responding',\n    confidenceScore: 0.92,\n    description: 'Oil spill detected approximately 80 miles off the coast, covering 12.3 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1581905192180-99cedf951aae?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2040&q=80'\n  },\n  {\n    id: 4,\n    type: 'flood',\n    location: 'Mekong Delta, Vietnam',\n    coordinates: [105.78, 10.03],\n    detectionDate: new Date(2025, 4, 15),\n    severity: 'medium',\n    status: 'monitored',\n    confidenceScore: 0.87,\n    description: 'Unusual flooding detected in agricultural areas covering approximately 18.5 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1547683906-3a7b01d78966?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80'\n  },\n  {\n    id: 5,\n    type: 'algal_bloom',\n    location: 'Lake Erie, USA',\n    coordinates: [-82.67, 41.65],\n    detectionDate: new Date(2025, 4, 10),\n    severity: 'low',\n    status: 'resolved',\n    confidenceScore: 0.85,\n    description: 'Harmful algal bloom detected covering approximately 22.7 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1572381235456-a72d911af084?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80'\n  },\n  {\n    id: 6,\n    type: 'drought',\n    location: 'California Central Valley, USA',\n    coordinates: [-119.27, 36.78],\n    detectionDate: new Date(2025, 4, 5),\n    severity: 'high',\n    status: 'verified',\n    confidenceScore: 0.91,\n    description: 'Severe drought conditions detected across agricultural region',\n    imageUrl: 'https://images.unsplash.com/photo-1589149736049-26a4b34bdf15?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2069&q=80'\n  }\n];\n\n// Helper function for severity color\nconst getSeverityColor = (severity: string) => {\n  switch (severity) {\n    case 'high':\n      return 'error';\n    case 'medium':\n      return 'warning';\n    case 'low':\n      return 'success';\n    default:\n      return 'default';\n  }\n};\n\n// Helper function for status icon\nconst getStatusIcon = (status: string) => {\n  switch (status) {\n    case 'detected':\n      return <Warning color=\"error\" />;\n    case 'verified':\n      return <Info color=\"info\" />;\n    case 'responding':\n      return <ErrorOutline color=\"warning\" />;\n    case 'monitored':\n      return <RestoreOutlined color=\"info\" />;\n    case 'resolved':\n      return <CheckCircleOutline color=\"success\" />;\n    default:\n      return null;\n  }\n};\n\nconst AnomalyDashboardPage: React.FC = () => {\n  const navigate = useNavigate();\n  \n  // State variables\n  const [view, setView] = useState<number>(0); // 0=cards, 1=table, 2=map\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n  const [severityFilter, setSeverityFilter] = useState<string>('all');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [dateRange, setDateRange] = useState<string>('all');\n  \n  // Filtered anomalies based on search and filters\n  const filteredAnomalies = mockAnomalies.filter(anomaly => {\n    // Search query filter\n    if (searchQuery && !anomaly.location.toLowerCase().includes(searchQuery.toLowerCase()) &&\n        !anomaly.description.toLowerCase().includes(searchQuery.toLowerCase()) &&\n        !anomaly.type.toLowerCase().includes(searchQuery.toLowerCase())) {\n      return false;\n    }\n    \n    // Type filter\n    if (typeFilter !== 'all' && anomaly.type !== typeFilter) {\n      return false;\n    }\n    \n    // Severity filter\n    if (severityFilter !== 'all' && anomaly.severity !== severityFilter) {\n      return false;\n    }\n    \n    // Status filter\n    if (statusFilter !== 'all' && anomaly.status !== statusFilter) {\n      return false;\n    }\n    \n    // Date range filter (simplified for now)\n    if (dateRange === 'today') {\n      const today = new Date();\n      return anomaly.detectionDate.toDateString() === today.toDateString();\n    } else if (dateRange === 'week') {\n      const weekAgo = new Date();\n      weekAgo.setDate(weekAgo.getDate() - 7);\n      return anomaly.detectionDate >= weekAgo;\n    } else if (dateRange === 'month') {\n      const monthAgo = new Date();\n      monthAgo.setMonth(monthAgo.getMonth() - 1);\n      return anomaly.detectionDate >= monthAgo;\n    }\n    \n    return true;\n  });\n  \n  // Handle filter changes\n  const handleTypeFilterChange = (event: SelectChangeEvent) => {\n    setTypeFilter(event.target.value);\n  };\n  \n  const handleSeverityFilterChange = (event: SelectChangeEvent) => {\n    setSeverityFilter(event.target.value);\n  };\n  \n  const handleStatusFilterChange = (event: SelectChangeEvent) => {\n    setStatusFilter(event.target.value);\n  };\n  \n  const handleDateRangeChange = (event: SelectChangeEvent) => {\n    setDateRange(event.target.value);\n  };\n  \n  // Handle search query change\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n  \n  // Handle view change\n  const handleViewChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setView(newValue);\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Environmental Anomaly Dashboard\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          AI-detected environmental events requiring attention and monitoring\n        </Typography>\n      </Box>\n      \n      {/* Statistics Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Total Anomalies\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {mockAnomalies.length}\n            </Typography>\n            <LinearProgress variant=\"determinate\" value={100} color=\"primary\" />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              High Severity\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {mockAnomalies.filter(a => a.severity === 'high').length}\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={(mockAnomalies.filter(a => a.severity === 'high').length / mockAnomalies.length) * 100} \n              color=\"error\" \n            />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Active Monitoring\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {mockAnomalies.filter(a => a.status !== 'resolved').length}\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={(mockAnomalies.filter(a => a.status !== 'resolved').length / mockAnomalies.length) * 100} \n              color=\"warning\" \n            />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Avg. Confidence\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {(mockAnomalies.reduce((acc, cur) => acc + cur.confidenceScore, 0) / mockAnomalies.length * 100).toFixed(1)}%\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={(mockAnomalies.reduce((acc, cur) => acc + cur.confidenceScore, 0) / mockAnomalies.length) * 100} \n              color=\"info\" \n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      \n      {/* Filters and Search */}\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} md={3}>\n            <TextField\n              fullWidth\n              placeholder=\"Search anomalies...\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Search />\n                  </InputAdornment>\n                ),\n              }}\n              size=\"small\"\n            />\n          </Grid>\n          \n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"type-filter-label\">Type</InputLabel>\n              <Select\n                labelId=\"type-filter-label\"\n                value={typeFilter}\n                label=\"Type\"\n                onChange={handleTypeFilterChange}\n              >\n                <MenuItem value=\"all\">All Types</MenuItem>\n                <MenuItem value=\"wildfire\">Wildfire</MenuItem>\n                <MenuItem value=\"deforestation\">Deforestation</MenuItem>\n                <MenuItem value=\"oil_spill\">Oil Spill</MenuItem>\n                <MenuItem value=\"flood\">Flood</MenuItem>\n                <MenuItem value=\"algal_bloom\">Algal Bloom</MenuItem>\n                <MenuItem value=\"drought\">Drought</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"severity-filter-label\">Severity</InputLabel>\n              <Select\n                labelId=\"severity-filter-label\"\n                value={severityFilter}\n                label=\"Severity\"\n                onChange={handleSeverityFilterChange}\n              >\n                <MenuItem value=\"all\">All Severities</MenuItem>\n                <MenuItem value=\"high\">High</MenuItem>\n                <MenuItem value=\"medium\">Medium</MenuItem>\n                <MenuItem value=\"low\">Low</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"status-filter-label\">Status</InputLabel>\n              <Select\n                labelId=\"status-filter-label\"\n                value={statusFilter}\n                label=\"Status\"\n                onChange={handleStatusFilterChange}\n              >\n                <MenuItem value=\"all\">All Statuses</MenuItem>\n                <MenuItem value=\"detected\">Detected</MenuItem>\n                <MenuItem value=\"verified\">Verified</MenuItem>\n                <MenuItem value=\"responding\">Responding</MenuItem>\n                <MenuItem value=\"monitored\">Monitored</MenuItem>\n                <MenuItem value=\"resolved\">Resolved</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"date-range-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"date-range-label\"\n                value={dateRange}\n                label=\"Date Range\"\n                onChange={handleDateRangeChange}\n              >\n                <MenuItem value=\"all\">All Time</MenuItem>\n                <MenuItem value=\"today\">Today</MenuItem>\n                <MenuItem value=\"week\">Past Week</MenuItem>\n                <MenuItem value=\"month\">Past Month</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={1}>\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <ButtonGroup size=\"small\">\n                <Button\n                  variant={view === 0 ? \"contained\" : \"outlined\"}\n                  onClick={() => setView(0)}\n                >\n                  <TableChartOutlined fontSize=\"small\" />\n                </Button>\n                <Button\n                  variant={view === 1 ? \"contained\" : \"outlined\"}\n                  onClick={() => setView(1)}\n                >\n                  <MapOutlined fontSize=\"small\" />\n                </Button>\n                <Button\n                  variant={view === 2 ? \"contained\" : \"outlined\"}\n                  onClick={() => setView(2)}\n                >\n                  <BarChartOutlined fontSize=\"small\" />\n                </Button>\n              </ButtonGroup>\n            </Box>\n          </Grid>\n        </Grid>\n      </Paper>\n      \n      {/* Tabs for different views */}\n      <Paper sx={{ mb: 3 }}>\n        <Tabs value={view} onChange={handleViewChange} aria-label=\"anomaly view tabs\">\n          <Tab label=\"Card View\" />\n          <Tab label=\"Map View\" />\n          <Tab label=\"Analytics\" />\n        </Tabs>\n      </Paper>\n      \n      {/* Card View */}\n      {view === 0 && (\n        <Grid container spacing={3}>\n          {filteredAnomalies.map(anomaly => (\n            <Grid item key={anomaly.id} xs={12} md={6} lg={4}>\n              <Card sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                <CardMedia\n                  component=\"img\"\n                  height=\"200\"\n                  image={anomaly.imageUrl}\n                  alt={anomaly.type}\n                />\n                <CardContent sx={{ flexGrow: 1 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\n                      {anomaly.type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                    </Typography>\n                    <Chip \n                      label={anomaly.severity.toUpperCase()} \n                      color={getSeverityColor(anomaly.severity) as any}\n                      size=\"small\"\n                    />\n                  </Box>\n                  \n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\n                    {getStatusIcon(anomaly.status)}\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Status: {anomaly.status.replace(/\\b\\w/g, l => l.toUpperCase())}\n                    </Typography>\n                  </Stack>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    Location: {anomaly.location}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    Detected: {format(anomaly.detectionDate, 'PPP')}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    Confidence: {(anomaly.confidenceScore * 100).toFixed(1)}%\n                  </Typography>\n                  \n                  <Divider sx={{ my: 2 }} />\n                  \n                  <Typography variant=\"body1\">\n                    {anomaly.description}\n                  </Typography>\n                </CardContent>\n                <Box sx={{ p: 2, pt: 0 }}>\n                  <Button \n                    variant=\"contained\" \n                    fullWidth\n                    onClick={() => navigate(`/earth?anomaly=${anomaly.id}`)}\n                  >\n                    View on Earth\n                  </Button>\n                </Box>\n              </Card>\n            </Grid>\n          ))}\n          \n          {filteredAnomalies.length === 0 && (\n            <Grid item xs={12}>\n              <Paper sx={{ p: 4, textAlign: 'center' }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                  No anomalies found matching your filters\n                </Typography>\n                <Button \n                  variant=\"outlined\" \n                  sx={{ mt: 2 }}\n                  onClick={() => {\n                    setSearchQuery('');\n                    setTypeFilter('all');\n                    setSeverityFilter('all');\n                    setStatusFilter('all');\n                    setDateRange('all');\n                  }}\n                >\n                  Clear Filters\n                </Button>\n              </Paper>\n            </Grid>\n          )}\n        </Grid>\n      )}\n      \n      {/* Map View - In a real implementation, this would be a map component */}\n      {view === 1 && (\n        <Paper sx={{ p: 2, height: 600, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Box sx={{ textAlign: 'center' }}>\n            <MapOutlined sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n            <Typography variant=\"h6\">\n              Map View\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              In the full implementation, this would display anomalies on an interactive map\n            </Typography>\n            <Button \n              variant=\"contained\" \n              sx={{ mt: 2 }}\n              onClick={() => navigate('/earth')}\n            >\n              View in Earth Viewer\n            </Button>\n          </Box>\n        </Paper>\n      )}\n      \n      {/* Analytics View - In a real implementation, this would show charts and statistics */}\n      {view === 2 && (\n        <Paper sx={{ p: 2, height: 600, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Box sx={{ textAlign: 'center' }}>\n            <BarChartOutlined sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n            <Typography variant=\"h6\">\n              Analytics View\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              In the full implementation, this would display charts and statistics about anomalies\n            </Typography>\n          </Box>\n        </Paper>\n      )}\n      \n      {/* Pagination */}\n      <Box sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n        <ButtonGroup variant=\"outlined\">\n          <Button startIcon={<NavigateBefore />}>\n            Previous\n          </Button>\n          <Button endIcon={<NavigateNext />}>\n            Next\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AnomalyDashboardPage;\n","import React from 'react';\nimport { Box, Typography, Container, Grid, Card, CardContent, CardMedia, Chip, Stack } from '@mui/material';\n\nconst DataCatalogPage: React.FC = () => {\n  // This would be fetched from an API in a real implementation\n  const dataSources = [\n    {\n      id: 1,\n      name: 'NASA MODIS',\n      description: 'Moderate Resolution Imaging Spectroradiometer data providing global imagery',\n      type: 'Satellite',\n      updateFrequency: 'Daily',\n      resolution: '250m-1km',\n      coverage: 'Global',\n      image: 'https://eoimages.gsfc.nasa.gov/images/imagerecords/73000/73751/world.topo.bathy.200407.3x5400x2700.jpg'\n    },\n    {\n      id: 2,\n      name: 'NOAA Weather Data',\n      description: 'Global weather measurements including temperature, precipitation, and wind',\n      type: 'Weather',\n      updateFrequency: 'Hourly',\n      resolution: 'Variable',\n      coverage: 'Global',\n      image: 'https://www.ncei.noaa.gov/sites/default/files/2023-04/FY21_NCEI_DataMap_ALL_0.jpg'\n    },\n    {\n      id: 3,\n      name: 'Sentinel-2',\n      description: 'High-resolution optical imagery for land monitoring',\n      type: 'Satellite',\n      updateFrequency: '5 days',\n      resolution: '10m',\n      coverage: 'Global land surfaces',\n      image: 'https://sentinels.copernicus.eu/documents/247904/2560237/Sentinel-2-image-Austria-Vienna.jpg'\n    },\n    {\n      id: 4,\n      name: 'Global Fire Data',\n      description: 'Active fire detection and burned area mapping',\n      type: 'Anomaly',\n      updateFrequency: 'Daily',\n      resolution: '375m',\n      coverage: 'Global',\n      image: 'https://earthobservatory.nasa.gov/ContentWOC/images/globalmaps/fire_avg_2001-2018.jpg'\n    },\n    {\n      id: 5,\n      name: 'Global Forest Watch',\n      description: 'Deforestation and forest change monitoring',\n      type: 'Anomaly',\n      updateFrequency: 'Weekly',\n      resolution: '30m',\n      coverage: 'Global forests',\n      image: 'https://wri-datalab.s3.amazonaws.com/manual/gfw-help-center/Forest_sideview.jpg'\n    },\n    {\n      id: 6,\n      name: 'Global Flood Database',\n      description: 'Historical and real-time flood extent mapping',\n      type: 'Anomaly',\n      updateFrequency: 'As available',\n      resolution: '30m',\n      coverage: 'Global',\n      image: 'https://reliefweb.int/sites/default/files/styles/large_landscape/public/previews/95/27/95271a71-f8fc-3c2d-91a5-9a3f57f95b5e.png'\n    }\n  ];\n\n  // Group data sources by type\n  const groupedSources = dataSources.reduce((acc, source) => {\n    if (!acc[source.type]) {\n      acc[source.type] = [];\n    }\n    acc[source.type].push(source);\n    return acc;\n  }, {} as Record<string, typeof dataSources>);\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Data Catalog\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n        Browse the available data sources in the VisionEarth platform. These datasets are used to visualize environmental conditions and detect anomalies.\n      </Typography>\n\n      {Object.entries(groupedSources).map(([type, sources]) => (\n        <Box key={type} sx={{ mb: 6 }}>\n          <Typography variant=\"h5\" component=\"h2\" sx={{ mb: 2, mt: 4 }}>\n            {type} Data\n          </Typography>\n          <Grid container spacing={3}>\n            {sources.map((source) => (\n              <Grid item xs={12} md={6} key={source.id}>\n                <Card sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image={source.image}\n                    alt={source.name}\n                    sx={{ objectFit: 'cover' }}\n                  />\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                      {source.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                      {source.description}\n                    </Typography>\n                    <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" gap={1}>\n                      <Chip label={`Update: ${source.updateFrequency}`} size=\"small\" />\n                      <Chip label={`Resolution: ${source.resolution}`} size=\"small\" />\n                      <Chip label={`Coverage: ${source.coverage}`} size=\"small\" />\n                    </Stack>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      ))}\n    </Container>\n  );\n};\n\nexport default DataCatalogPage;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  Switch,\n  FormControlLabel,\n  Divider,\n  Slider,\n  TextField,\n  Button,\n  Grid,\n  Select,\n  SelectChangeEvent,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Alert\n} from '@mui/material';\n\nconst SettingsPage: React.FC = () => {\n  // These would be fetched from and saved to a backend in a real implementation\n  const [settings, setSettings] = useState({\n    theme: 'dark',\n    dataSourceRefreshInterval: 15,\n    enableNotifications: true,\n    notificationsForAnomalyDetection: true,\n    notificationsForDataUpdates: false,\n    maxQualityMode: false,\n    defaultLocation: {\n      lat: 37.7749,\n      lng: -122.4194,\n      zoom: 4\n    },\n    cesiumToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlYWE1OWUxNy1mMWY0LTQzN2YtOGNkNC0yYTVmZjEwZGJmM2QiLCJpZCI6MTYyMTY3LCJpYXQiOjE2OTY5MDk2MTZ9.jaESQs38ACb1-OXgPt-FA-lARxYzBr_NLzEEZ7C27KQ',\n    apiEndpoints: {\n      weather: '/api/v1/weather',\n      satellite: '/api/v1/satellite',\n      anomalies: '/api/v1/anomalies'\n    },\n    highResImagery: false,\n    weatherOverlay: false,\n    countryBorders: false,\n    autoRefresh: false,\n    dataSource: 'NASA Earth Observations',\n    limitFrameRate: false,\n    reduceAnimations: false,\n    cloudSync: false\n  });\n\n  const [saved, setSaved] = useState(false);\n\n  const handleChange = (key: string, value: any) => {\n    setSettings({\n      ...settings,\n      [key]: value\n    });\n    setSaved(false);\n  };\n\n  const handleNestedChange = (parent: string, key: string, value: any) => {\n    setSettings((prevSettings) => ({\n      ...prevSettings,\n      [parent]: {\n        ...(prevSettings[parent as keyof typeof prevSettings] as Record<string, any>),\n        [key]: value\n      }\n    }));\n    setSaved(false);\n  };\n\n\n  const handleCheckboxChange = (setting: keyof typeof settings) => {\n    setSettings({\n      ...settings,\n      [setting]: !settings[setting as keyof typeof settings]\n    });\n    setSaved(false);\n  };\n\n  const handleSelectChange = (event: SelectChangeEvent) => {\n    setSettings({\n      ...settings,\n      dataSource: event.target.value as string\n    });\n    setSaved(false);\n  };\n\n  const handleSaveSettings = () => {\n    // In a real application, this would save to a backend API\n    console.log('Saving settings:', settings);\n    setSaved(true);\n    \n    // Reset the saved notification after 3 seconds\n    setTimeout(() => {\n      setSaved(false);\n    }, 3000);\n  };\n\n  const clearCache = () => {\n    console.log('Clearing cache...');\n    // Implement cache clearing logic\n  };\n\n  const resetSettings = () => {\n    setSettings({\n      theme: 'dark',\n      dataSourceRefreshInterval: 15,\n      enableNotifications: true,\n      notificationsForAnomalyDetection: true,\n      notificationsForDataUpdates: false,\n      maxQualityMode: false,\n      defaultLocation: {\n        lat: 37.7749,\n        lng: -122.4194,\n        zoom: 4\n      },\n      cesiumToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlYWE1OWUxNy1mMWY0LTQzN2YtOGNkNC0yYTVmZjEwZGJmM2QiLCJpZCI6MTYyMTY3LCJpYXQiOjE2OTY5MDk2MTZ9.jaESQs38ACb1-OXgPt-FA-lARxYzBr_NLzEEZ7C27KQ',\n      apiEndpoints: {\n        weather: '/api/v1/weather',\n        satellite: '/api/v1/satellite',\n        anomalies: '/api/v1/anomalies'\n      },\n      dataSource: 'NASA Earth Observations',\n      highResImagery: false,\n      weatherOverlay: false,\n      countryBorders: false,\n      autoRefresh: false,\n      limitFrameRate: false,\n      reduceAnimations: false,\n      cloudSync: false\n    });\n    console.log('Settings reset');\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Settings\n      </Typography>\n      \n      {saved && (\n        <Alert severity=\"success\" sx={{ mb: 3 }}>\n          Settings saved successfully!\n        </Alert>\n      )}\n      \n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Appearance\n        </Typography>\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel id=\"theme-label\">Theme</InputLabel>\n          <Select\n            labelId=\"theme-label\"\n            value={settings.theme}\n            label=\"Theme\"\n            onChange={(e) => handleChange('theme', e.target.value)}\n          >\n            <MenuItem value=\"dark\">Dark</MenuItem>\n            <MenuItem value=\"light\">Light</MenuItem>\n            <MenuItem value=\"system\">System Default</MenuItem>\n          </Select>\n        </FormControl>\n        \n        <FormControlLabel\n          control={\n            <Switch\n              checked={settings.maxQualityMode}\n              onChange={(e) => handleChange('maxQualityMode', e.target.checked)}\n            />\n          }\n          label=\"High Quality Mode (may affect performance)\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.highResImagery}\n              onChange={() => handleCheckboxChange('highResImagery')}\n            /> \n          }\n          label=\"Enable High Resolution Imagery\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.weatherOverlay}\n              onChange={() => handleCheckboxChange('weatherOverlay')}\n            /> \n          }\n          label=\"Enable Weather Overlay\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.countryBorders}\n              onChange={() => handleCheckboxChange('countryBorders')}\n            /> \n          }\n          label=\"Enable Country Borders\"\n          sx={{ mt: 2 }}\n        />\n      </Paper>\n      \n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Data & Updates\n        </Typography>\n        \n        <Box sx={{ mb: 2 }}>\n          <Typography id=\"data-refresh-slider\" gutterBottom>\n            Data Source Refresh Interval (minutes)\n          </Typography>\n          <Slider\n            value={settings.dataSourceRefreshInterval}\n            onChange={(_, value) => handleChange('dataSourceRefreshInterval', value)}\n            aria-labelledby=\"data-refresh-slider\"\n            valueLabelDisplay=\"auto\"\n            step={5}\n            marks\n            min={5}\n            max={60}\n          />\n        </Box>\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.autoRefresh}\n              onChange={() => handleCheckboxChange('autoRefresh')}\n            /> \n          }\n          label=\"Auto-refresh Data (every 10 minutes)\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel id=\"data-source-label\">Data Source</InputLabel>\n          <Select\n            labelId=\"data-source-label\"\n            value={settings.dataSource}\n            label=\"Data Source\"\n            onChange={handleSelectChange}\n          >\n            <MenuItem value=\"NASA Earth Observations\">NASA Earth Observations</MenuItem>\n            <MenuItem value=\"Other\">Other</MenuItem>\n          </Select>\n        </FormControl>\n        \n        <Divider sx={{ my: 3 }} />\n        \n        <Typography variant=\"subtitle1\" gutterBottom>\n          Notifications\n        </Typography>\n        \n        <FormControlLabel\n          control={\n            <Switch\n              checked={settings.enableNotifications}\n              onChange={(e) => handleChange('enableNotifications', e.target.checked)}\n            />\n          }\n          label=\"Enable Notifications\"\n        />\n        \n        <Box sx={{ pl: 3, mt: 1 }}>\n          <FormControlLabel\n            control={\n              <Switch\n                disabled={!settings.enableNotifications}\n                checked={settings.notificationsForAnomalyDetection}\n                onChange={(e) => handleChange('notificationsForAnomalyDetection', e.target.checked)}\n              />\n            }\n            label=\"Anomaly Detection Alerts\"\n          />\n          \n          <FormControlLabel\n            control={\n              <Switch\n                disabled={!settings.enableNotifications}\n                checked={settings.notificationsForDataUpdates}\n                onChange={(e) => handleChange('notificationsForDataUpdates', e.target.checked)}\n              />\n            }\n            label=\"Data Source Update Notifications\"\n          />\n          \n          <FormControlLabel\n            control={\n              <input \n                type=\"checkbox\" \n                checked={settings.cloudSync}\n                onChange={() => handleCheckboxChange('cloudSync')}\n              /> \n            }\n            label=\"Enable Cloud Sync\"\n          />\n        </Box>\n      </Paper>\n      \n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Performance\n        </Typography>\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.limitFrameRate}\n              onChange={() => handleCheckboxChange('limitFrameRate')}\n            /> \n          }\n          label=\"Limit Frame Rate\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.reduceAnimations}\n              onChange={() => handleCheckboxChange('reduceAnimations')}\n            /> \n          }\n          label=\"Reduce Animations\"\n          sx={{ mt: 2 }}\n        />\n      </Paper>\n      \n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          API Configuration\n        </Typography>\n        \n        <TextField\n          fullWidth\n          label=\"Cesium Ion Access Token\"\n          value={settings.cesiumToken}\n          onChange={(e) => handleChange('cesiumToken', e.target.value)}\n          margin=\"normal\"\n          type=\"password\"\n        />\n        \n        <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>\n          API Endpoints\n        </Typography>\n        \n        <TextField\n          fullWidth\n          label=\"Weather API Endpoint\"\n          value={settings.apiEndpoints.weather}\n          onChange={(e) => handleNestedChange('apiEndpoints', 'weather', e.target.value)}\n          margin=\"normal\"\n        />\n        \n        <TextField\n          fullWidth\n          label=\"Satellite API Endpoint\"\n          value={settings.apiEndpoints.satellite}\n          onChange={(e) => handleNestedChange('apiEndpoints', 'satellite', e.target.value)}\n          margin=\"normal\"\n        />\n        \n        <TextField\n          fullWidth\n          label=\"Anomalies API Endpoint\"\n          value={settings.apiEndpoints.anomalies}\n          onChange={(e) => handleNestedChange('apiEndpoints', 'anomalies', e.target.value)}\n          margin=\"normal\"\n        />\n      </Paper>\n      \n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={handleSaveSettings}\n        >\n          Save Settings\n        </Button>\n        <Button \n          variant=\"outlined\" \n          onClick={clearCache} \n          sx={{ mr: 2 }}\n        >\n          Clear Cache\n        </Button>\n        <Button \n          variant=\"outlined\" \n          onClick={resetSettings}\n        >\n          Reset Settings\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SettingsPage;\n","import React from 'react';\nimport { Box, Typography, Button, Container } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage: React.FC = () => {\n  return (\n    <Container maxWidth=\"md\">\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '70vh',\n          textAlign: 'center',\n        }}\n      >\n        <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n          404\n        </Typography>\n        <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n          Page Not Found\n        </Typography>\n        <Typography variant=\"body1\" paragraph sx={{ mb: 4 }}>\n          The page you are looking for does not exist or has been moved.\n        </Typography>\n        <Button\n          component={Link}\n          to=\"/\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n        >\n          Back to Home\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Box, Typography, Paper, Button } from '@mui/material';\n\nconst TestPage: React.FC = () => {\n  return (\n    <Box sx={{ padding: 4 }}>\n      <Paper sx={{ padding: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          VisionEarth Test Page\n        </Typography>\n        <Typography variant=\"body1\" paragraph>\n          This is a simple test page to verify that the VisionEarth application is working correctly.\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\">\n          Test Button\n        </Button>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default TestPage;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\n// Import components\r\nimport Layout from './components/Layout';\r\nimport EarthViewerPage from './pages/EarthViewerPage';\r\nimport AnomalyDashboardPage from './pages/AnomalyDashboardPage';\r\nimport DataCatalogPage from './pages/DataCatalogPage';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\nimport TestPage from './pages/TestPage';\r\n\r\n// Create React Query client\r\nconst queryClient = new QueryClient();\r\n\r\n// Create theme\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#e91e63', // Red color for the logo and primary elements\r\n    },\r\n    secondary: {\r\n      main: '#ff4081',\r\n    },\r\n    background: {\r\n      default: '#0f172a',\r\n      paper: '#1e293b',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    h1: {\r\n      fontSize: '2.5rem',\r\n      fontWeight: 600,\r\n    },\r\n    h2: {\r\n      fontSize: '2rem',\r\n      fontWeight: 600,\r\n    },\r\n    h3: {\r\n      fontSize: '1.75rem',\r\n      fontWeight: 600,\r\n    },\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        body: {\r\n          overflow: 'hidden',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <Layout>\r\n            <Routes>\r\n              <Route path=\"/\" element={<EarthViewerPage />} />\r\n              <Route path=\"/anomalies\" element={<AnomalyDashboardPage />} />\r\n              <Route path=\"/catalog\" element={<DataCatalogPage />} />\r\n              <Route path=\"/settings\" element={<SettingsPage />} />\r\n              <Route path=\"/test\" element={<TestPage />} />\r\n              <Route path=\"*\" element={<NotFoundPage />} />\r\n            </Routes>\r\n          </Layout>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}