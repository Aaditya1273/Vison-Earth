{"version":3,"sources":["components/Layout.tsx","pages/EarthViewerPage.tsx","services/weatherService.ts","pages/AnomalyDashboardPage.tsx","pages/DataCatalogPage.tsx","pages/SettingsPage.tsx","pages/NotFoundPage.tsx","pages/TestPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","_ref","children","theme","useTheme","navigate","useNavigate","location","useLocation","isMobile","useMediaQuery","breakpoints","down","drawerOpen","setDrawerOpen","useState","handleDrawerToggle","menuItems","text","icon","React","createElement","EarthIcon","path","DashboardIcon","CatalogIcon","SettingsIcon","drawer","Fragment","Toolbar","sx","display","alignItems","justifyContent","Typography","variant","noWrap","component","IconButton","onClick","ChevronLeftIcon","Divider","List","map","item","ListItem","button","key","selected","pathname","&.Mui-selected","backgroundColor","&:hover","ListItemIcon","ListItemText","primary","Box","position","bottom","width","p","color","align","height","AppBar","sm","concat","ml","transition","transitions","create","easing","sharp","duration","leavingScreen","aria-label","edge","mr","MenuIcon","flexGrow","getPageTitle","SearchIcon","NotificationsIcon","palette","mode","LightModeIcon","DarkModeIcon","flexShrink","Drawer","open","onClose","ModalProps","keepMounted","& .MuiDrawer-paper","boxSizing","backgroundImage","borderRight","overflow","LAYER_ICONS","Satellite","Live","HD","Radar","Precipitation","Wind","Temperature","Humidity","Pressure","EarthViewerPage","loading","setLoading","error","setError","activeLayer","setActiveLayer","weatherData","setWeatherData","weatherLoading","setWeatherLoading","weatherError","setWeatherError","selectedLocation","setSelectedLocation","isPlaying","setIsPlaying","cesiumContainerRef","useRef","viewerRef","weatherEntityRef","fetchWeatherData","async","lat","lon","locationName","arguments","length","undefined","console","log","data","url","response","fetch","ok","Error","status","json","current_weather","getCurrentWeather","name","current","isDestroyed","addWeatherMarker","weather","viewer","entities","contains","remove","iconUrl","getWeatherIconUrl","weathercode","add","window","Cesium","Cartesian3","fromDegrees","billboard","image","verticalOrigin","VerticalOrigin","BOTTOM","disableDepthTestDistance","Number","POSITIVE_INFINITY","label","Math","round","temperature","font","fillColor","Color","WHITE","outlineColor","BLACK","outlineWidth","style","LabelStyle","FILL_AND_OUTLINE","TOP","pixelOffset","Cartesian2","camera","flyTo","destination","code","iconName","useEffect","isWebGLSupported","canvas","document","WebGLRenderingContext","getContext","e","top","left","Ion","defaultAccessToken","process","destroy","Viewer","terrainProvider","createWorldTerrain","imageryProvider","IonImageryProvider","assetId","baseLayerPicker","geocoder","homeButton","sceneModePicker","navigationHelpButton","animation","timeline","fullscreenButton","vrButton","selectionIndicator","infoBox","requestRenderMode","maximumRenderTimeChange","Infinity","targetFrameRate","orientation","heading","toRadians","pitch","roll","screenSpaceEventHandler","setInputAction","click","cartesian","pickEllipsoid","scene","globe","ellipsoid","cartographic","Cartographic","fromCartesian","toDegrees","longitude","latitude","ScreenSpaceEventType","LEFT_CLICK","bgcolor","ref","Paper","elevation","borderRadius","zIndex","borderBottom","background","fontWeight","letterSpacing","size","value","layer","Button","fullWidth","layerName","imageryLayers","get","addImageryProvider","alpha","precipLayer","brightness","contrast","hue","saturation","tempLayer","humidityLayer","pressureLayer","switchImageryLayer","py","px","textTransform","borderLeft","marginRight","textAlign","right","transform","flexDirection","gap","Tooltip","title","placement","mb","mt","handleZoomIn","cameraHeight","positionCartographic","zoomIn","handleZoomOut","zoomOut","CircularProgress","thickness","maxWidth","reload","mockAnomalies","id","type","coordinates","detectionDate","Date","severity","confidenceScore","description","imageUrl","getSeverityColor","AnomalyDashboardPage","view","setView","searchQuery","setSearchQuery","typeFilter","setTypeFilter","severityFilter","setSeverityFilter","statusFilter","setStatusFilter","dateRange","setDateRange","filteredAnomalies","filter","anomaly","toLowerCase","includes","today","toDateString","weekAgo","setDate","getDate","monthAgo","setMonth","getMonth","gutterBottom","Grid","container","spacing","xs","md","my","LinearProgress","a","reduce","acc","cur","toFixed","TextField","placeholder","onChange","event","target","InputProps","startAdornment","InputAdornment","Search","FormControl","InputLabel","Select","labelId","MenuItem","ButtonGroup","TableChartOutlined","fontSize","MapOutlined","BarChartOutlined","Tabs","handleViewChange","_event","newValue","Tab","lg","Card","CardMedia","alt","CardContent","replace","l","toUpperCase","Chip","Stack","direction","Warning","Info","ErrorOutline","RestoreOutlined","CheckCircleOutline","getStatusIcon","format","pt","startIcon","NavigateBefore","endIcon","NavigateNext","DataCatalogPage","groupedSources","updateFrequency","resolution","coverage","source","push","Container","paragraph","Object","entries","sources","objectFit","flexWrap","SettingsPage","settings","setSettings","dataSourceRefreshInterval","enableNotifications","notificationsForAnomalyDetection","notificationsForDataUpdates","maxQualityMode","defaultLocation","lng","zoom","cesiumToken","apiEndpoints","satellite","anomalies","highResImagery","weatherOverlay","countryBorders","autoRefresh","dataSource","limitFrameRate","reduceAnimations","cloudSync","saved","setSaved","handleChange","_objectSpread","[object Object]","handleNestedChange","parent","prevSettings","handleCheckboxChange","setting","Alert","margin","FormControlLabel","control","Switch","checked","Slider","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","pl","disabled","handleSaveSettings","setTimeout","clearCache","resetSettings","NotFoundPage","Link","to","TestPage","padding","queryClient","QueryClient","createTheme","main","secondary","default","paper","typography","fontFamily","h1","h2","h3","components","MuiCssBaseline","styleOverrides","body","App","QueryClientProvider","client","ThemeProvider","CssBaseline","Router","Routes","Route","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.76e8a86b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport {\n  AppBar,\n  Box,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n  Divider,\n  useTheme,\n  useMediaQuery,\n} from '@mui/material';\nimport {\n  Menu as MenuIcon,\n  Public as EarthIcon,\n  Dashboard as DashboardIcon,\n  Storage as CatalogIcon,\n  Settings as SettingsIcon,\n  Notifications as NotificationsIcon,\n  Search as SearchIcon,\n  ChevronLeft as ChevronLeftIcon,\n  Home as HomeIcon,\n  Brightness4 as DarkModeIcon,\n  Brightness7 as LightModeIcon,\n} from '@mui/icons-material';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nconst DRAWER_WIDTH = 240;\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  \n  const [drawerOpen, setDrawerOpen] = useState(!isMobile);\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const getPageTitle = () => {\n    switch (location.pathname) {\n      case '/':\n        return 'Earth Viewer';\n      case '/anomalies':\n        return 'Anomaly Dashboard';\n      case '/catalog':\n        return 'Data Catalog';\n      case '/settings':\n        return 'Settings';\n      default:\n        return 'VisionEarth';\n    }\n  };\n\n  const menuItems = [\n    { text: 'Earth Viewer', icon: <EarthIcon />, path: '/' },\n    { text: 'Anomaly Dashboard', icon: <DashboardIcon />, path: '/anomalies' },\n    { text: 'Data Catalog', icon: <CatalogIcon />, path: '/catalog' },\n    { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\n  ];\n\n  const drawer = (\n    <>\n      <Toolbar sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n        <Typography variant=\"h6\" noWrap component=\"div\">\n          VisionEarth\n        </Typography>\n        {isMobile && (\n          <IconButton onClick={handleDrawerToggle}>\n            <ChevronLeftIcon />\n          </IconButton>\n        )}\n      </Toolbar>\n      <Divider />\n      <List>\n        {menuItems.map((item) => (\n          <ListItem\n            button\n            key={item.text}\n            onClick={() => navigate(item.path)}\n            selected={location.pathname === item.path}\n            sx={{\n              '&.Mui-selected': {\n                backgroundColor: 'rgba(92, 187, 242, 0.2)',\n                '&:hover': {\n                  backgroundColor: 'rgba(92, 187, 242, 0.3)',\n                },\n              },\n            }}\n          >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box sx={{ position: 'absolute', bottom: 0, width: '100%', p: 2 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          © 2025 VisionEarth\n        </Typography>\n      </Box>\n    </>\n  );\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          width: { sm: `calc(100% - ${drawerOpen ? DRAWER_WIDTH : 0}px)` },\n          ml: { sm: `${drawerOpen ? DRAWER_WIDTH : 0}px` },\n          transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n          }),\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1 }}>\n            {getPageTitle()}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <SearchIcon />\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <NotificationsIcon />\n          </IconButton>\n          <IconButton color=\"inherit\">\n            {theme.palette.mode === 'dark' ? <LightModeIcon /> : <DarkModeIcon />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Box\n        component=\"nav\"\n        sx={{ width: { sm: drawerOpen ? DRAWER_WIDTH : 0 }, flexShrink: { sm: 0 } }}\n      >\n        {isMobile ? (\n          <Drawer\n            variant=\"temporary\"\n            open={drawerOpen}\n            onClose={handleDrawerToggle}\n            ModalProps={{ keepMounted: true }}\n            sx={{\n              '& .MuiDrawer-paper': { \n                boxSizing: 'border-box', \n                width: DRAWER_WIDTH,\n                backgroundImage: 'linear-gradient(rgba(15, 23, 42, 0.9), rgba(15, 23, 42, 0.95))',\n                borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n              },\n            }}\n          >\n            {drawer}\n          </Drawer>\n        ) : (\n          <Drawer\n            variant=\"persistent\"\n            open={drawerOpen}\n            sx={{\n              '& .MuiDrawer-paper': { \n                boxSizing: 'border-box', \n                width: DRAWER_WIDTH,\n                backgroundImage: 'linear-gradient(rgba(15, 23, 42, 0.9), rgba(15, 23, 42, 0.95))',\n                borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n              },\n            }}\n          >\n            {drawer}\n          </Drawer>\n        )}\n      </Box>\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 0,\n          width: { sm: `calc(100% - ${drawerOpen ? DRAWER_WIDTH : 0}px)` },\n          ml: { sm: `${drawerOpen ? DRAWER_WIDTH : 0}px` },\n          height: '100vh',\n          overflow: 'hidden',\n          transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n          }),\n        }}\n      >\n        <Toolbar /> {/* Spacer for the AppBar */}\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box, Paper, Typography, Button, CircularProgress, Tooltip, IconButton, Slider\n} from '@mui/material';\nimport { getCurrentWeather, CurrentWeather } from '../services/weatherService';\n\n// Define the window interface extension for Cesium global object\ndeclare global {\n  interface Window {\n    Cesium: any;\n  }\n}\n\n// Cesium Ion access token from environment variables\nconst CESIUM_ACCESS_TOKEN = process.env.REACT_APP_CESIUM_ACCESS_TOKEN || '9ff13709-5bab-46ad-a792-bba5db573d07';\n\n// Weather layer icons (using emoji for now)\nconst LAYER_ICONS: Record<string, string> = {\n  'Satellite': '🛰️',\n  'Live': '✓',\n  'HD': '🔍',\n  'Radar': '📡',\n  'Precipitation': '🌧️',\n  'Wind': '💨',\n  'Temperature': '🌡️',\n  'Humidity': '💧',\n  'Pressure': '⭕',\n};\n\nconst EarthViewerPage: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeLayer, setActiveLayer] = useState('Satellite');\n  const [weatherData, setWeatherData] = useState<CurrentWeather | null>(null);\n  const [weatherLoading, setWeatherLoading] = useState(false);\n  const [weatherError, setWeatherError] = useState<string | null>(null);\n  const [selectedLocation, setSelectedLocation] = useState<{lat: number, lon: number, name: string} | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  \n  const cesiumContainerRef = useRef<HTMLDivElement>(null);\n  const viewerRef = useRef<any>(null);\n  const weatherEntityRef = useRef<any>(null);\n  \n  // Function to check if Cesium is loaded\n  const isCesiumLoaded = () => {\n    return typeof window.Cesium !== 'undefined';\n  };\n  \n  // Function to check if WebGL is supported\n  const isWebGLSupported = () => {\n    try {\n      const canvas = document.createElement('canvas');\n      return (\n        window.WebGLRenderingContext &&\n        (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n      );\n    } catch (e) {\n      return false;\n    }\n  };\n  \n  // Function to fetch weather data for a specific location\n  const fetchWeatherData = async (lat: number, lon: number, locationName: string = 'Selected Location') => {\n    if (weatherLoading) return;\n    \n    setWeatherLoading(true);\n    setWeatherError(null);\n    \n    try {\n      console.log(`Fetching weather data for ${locationName} (${lat}, ${lon})`);\n      const data = await getCurrentWeather(lat, lon);\n      setWeatherData(data);\n      setSelectedLocation({ lat, lon, name: locationName });\n      \n      // If we have a Cesium viewer, add a weather marker at this location\n      if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n        addWeatherMarker(lat, lon, data);\n      }\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setWeatherError('Failed to fetch weather data. Please try again.');\n    } finally {\n      setWeatherLoading(false);\n    }\n  };\n  \n  // Function to add a weather marker to the map\n  const addWeatherMarker = (lat: number, lon: number, weather: CurrentWeather) => {\n    const viewer = viewerRef.current;\n    if (!viewer || viewer.isDestroyed()) return;\n    \n    // Remove existing weather entity if it exists\n    if (weatherEntityRef.current && viewer.entities.contains(weatherEntityRef.current)) {\n      viewer.entities.remove(weatherEntityRef.current);\n    }\n    \n    // Get weather icon URL based on weather code\n    const iconUrl = getWeatherIconUrl(weather.weathercode);\n    \n    // Create a new entity for the weather marker\n    weatherEntityRef.current = viewer.entities.add({\n      position: window.Cesium.Cartesian3.fromDegrees(lon, lat),\n      billboard: {\n        image: iconUrl,\n        width: 32,\n        height: 32,\n        verticalOrigin: window.Cesium.VerticalOrigin.BOTTOM,\n        disableDepthTestDistance: Number.POSITIVE_INFINITY\n      },\n      label: {\n        text: `${Math.round(weather.temperature)}°C`,\n        font: '14px sans-serif',\n        fillColor: window.Cesium.Color.WHITE,\n        outlineColor: window.Cesium.Color.BLACK,\n        outlineWidth: 2,\n        style: window.Cesium.LabelStyle.FILL_AND_OUTLINE,\n        verticalOrigin: window.Cesium.VerticalOrigin.TOP,\n        pixelOffset: new window.Cesium.Cartesian2(0, 5),\n        disableDepthTestDistance: Number.POSITIVE_INFINITY\n      }\n    });\n    \n    // Fly to the weather location\n    viewer.camera.flyTo({\n      destination: window.Cesium.Cartesian3.fromDegrees(lon, lat, 1000000),\n      duration: 2\n    });\n  };\n  \n  // Helper function to get weather icon URL based on weather code\n  const getWeatherIconUrl = (code: number): string => {\n    // Map weather codes to icon names\n    let iconName = 'unknown';\n    \n    if (code === 0) iconName = 'clear-day';\n    else if (code === 1 || code === 2) iconName = 'partly-cloudy-day';\n    else if (code === 3) iconName = 'cloudy';\n    else if (code === 45 || code === 48) iconName = 'fog';\n    else if (code >= 51 && code <= 57) iconName = 'drizzle';\n    else if (code >= 61 && code <= 67) iconName = 'rain';\n    else if (code >= 71 && code <= 77) iconName = 'snow';\n    else if (code >= 80 && code <= 82) iconName = 'rain';\n    else if (code >= 85 && code <= 86) iconName = 'snow';\n    else if (code >= 95) iconName = 'thunderstorm';\n    \n    // Return a placeholder URL - in a real app, you would use actual weather icons\n    return `https://cdn.weatherapi.com/weather/64x64/day/${iconName}.png`;\n  };\n  \n  // Function to switch between different imagery layers\n  const switchImageryLayer = (layerName: string) => {\n    if (!viewerRef.current || viewerRef.current.isDestroyed()) return;\n    \n    setActiveLayer(layerName);\n    \n    const viewer = viewerRef.current;\n    const imageryLayers = viewer.imageryLayers;\n    \n    // Remove all existing layers except the base layer\n    while (imageryLayers.length > 1) {\n      imageryLayers.remove(imageryLayers.get(1));\n    }\n    \n    // Add the selected layer\n    try {\n      switch (layerName) {\n        case 'Satellite':\n          // Use Bing Maps Aerial imagery\n          imageryLayers.addImageryProvider(\n            new window.Cesium.IonImageryProvider({\n              assetId: 2 // Bing Maps Aerial\n            })\n          );\n          break;\n          \n        case 'Live':\n          // Use Bing Maps Aerial with Labels imagery\n          imageryLayers.addImageryProvider(\n            new window.Cesium.IonImageryProvider({\n              assetId: 3 // Bing Maps Aerial with Labels\n            })\n          );\n          break;\n          \n        case 'HD':\n          // Use high-definition imagery\n          imageryLayers.addImageryProvider(\n            new window.Cesium.IonImageryProvider({\n              assetId: 4 // World Imagery\n            })\n          );\n          break;\n          \n        case 'Radar':\n          // Fetch radar data if we have a location\n          if (selectedLocation) {\n            // In a real app, you would fetch and display actual radar data\n            // For now, we'll use the simulated layer\n            const radarLayer = imageryLayers.addImageryProvider(\n              new window.Cesium.IonImageryProvider({\n                assetId: 2 // Bing Maps Aerial\n              })\n            );\n            radarLayer.alpha = 0.7;\n          } else {\n            // Default to India if no location selected\n            fetchWeatherData(20.5937, 78.9629, 'India');\n          }\n          break;\n          \n        case 'Precipitation':\n          // Fetch precipitation data if we have a location\n          if (selectedLocation) {\n            // In a real app, you would fetch and display actual precipitation data\n            // For now, we'll use the simulated layer\n            const precipLayer = imageryLayers.addImageryProvider(\n              new window.Cesium.IonImageryProvider({\n                assetId: 2 // Bing Maps Aerial\n              })\n            );\n            precipLayer.alpha = 0.7;\n            precipLayer.brightness = 1.0;\n            precipLayer.contrast = 1.0;\n            precipLayer.hue = 0.5; // Blue tint\n            precipLayer.saturation = 2.0;\n          } else {\n            // Default to India if no location selected\n            fetchWeatherData(20.5937, 78.9629, 'India');\n          }\n          break;\n          \n        case 'Wind':\n          // Fetch wind data if we have a location\n          if (selectedLocation) {\n            // In a real app, you would fetch and display actual wind data\n            // For now, we'll use the simulated layer\n            const windLayer = imageryLayers.addImageryProvider(\n              new window.Cesium.IonImageryProvider({\n                assetId: 2 // Bing Maps Aerial\n              })\n            );\n            windLayer.alpha = 0.7;\n          } else {\n            // Default to India if no location selected\n            fetchWeatherData(20.5937, 78.9629, 'India');\n          }\n          break;\n          \n        case 'Temperature':\n          // Fetch temperature data if we have a location\n          if (selectedLocation) {\n            // In a real app, you would fetch and display actual temperature data\n            // For now, we'll use the simulated layer\n            const tempLayer = imageryLayers.addImageryProvider(\n              new window.Cesium.IonImageryProvider({\n                assetId: 3 // Bing Maps Aerial with Labels\n              })\n            );\n            tempLayer.alpha = 0.5;\n            tempLayer.brightness = 1.0;\n            tempLayer.contrast = 1.0;\n            tempLayer.hue = 0.0; // Red tint\n            tempLayer.saturation = 2.0;\n          } else {\n            // Default to India if no location selected\n            fetchWeatherData(20.5937, 78.9629, 'India');\n          }\n          break;\n          \n        case 'Humidity':\n          // Fetch humidity data if we have a location\n          if (selectedLocation) {\n            // In a real app, you would fetch and display actual humidity data\n            // For now, we'll use the simulated layer\n            const humidityLayer = imageryLayers.addImageryProvider(\n              new window.Cesium.IonImageryProvider({\n                assetId: 3 // Bing Maps Aerial with Labels\n              })\n            );\n            humidityLayer.alpha = 0.5;\n            humidityLayer.brightness = 1.0;\n            humidityLayer.contrast = 1.0;\n            humidityLayer.hue = 0.33; // Green tint\n            humidityLayer.saturation = 2.0;\n          } else {\n            // Default to India if no location selected\n            fetchWeatherData(20.5937, 78.9629, 'India');\n          }\n          break;\n          \n        case 'Pressure':\n          // Fetch pressure data if we have a location\n          if (selectedLocation) {\n            // In a real app, you would fetch and display actual pressure data\n            // For now, we'll use the simulated layer\n            const pressureLayer = imageryLayers.addImageryProvider(\n              new window.Cesium.IonImageryProvider({\n                assetId: 3 // Bing Maps Aerial with Labels\n              })\n            );\n            pressureLayer.alpha = 0.5;\n            pressureLayer.brightness = 1.0;\n            pressureLayer.contrast = 1.0;\n            pressureLayer.hue = 0.83; // Purple tint\n            pressureLayer.saturation = 2.0;\n          } else {\n            // Default to India if no location selected\n            fetchWeatherData(20.5937, 78.9629, 'India');\n          }\n          break;\n          \n        default:\n          // Default to live view\n          break;\n      }\n    } catch (error) {\n      console.error(`Error switching to ${layerName} layer:`, error);\n    }\n  };\n  \n  // Initialize Cesium viewer when component mounts\n  useEffect(() => {\n    // Skip initialization if Cesium is not loaded\n    if (!isCesiumLoaded()) {\n      setError('Cesium library not loaded. Please check your internet connection and reload the page.');\n      setLoading(false);\n      return;\n    }\n    \n    // Check if WebGL is supported\n    if (!isWebGLSupported()) {\n      setError('WebGL is not supported or enabled in your browser. Please enable WebGL or try a different browser.');\n      setLoading(false);\n      return;\n    }\n    \n    // Make sure the container is visible and properly sized\n    if (cesiumContainerRef.current) {\n      cesiumContainerRef.current.style.width = '100%';\n      cesiumContainerRef.current.style.height = '100%';\n      cesiumContainerRef.current.style.position = 'absolute';\n      cesiumContainerRef.current.style.top = '0';\n      cesiumContainerRef.current.style.left = '0';\n    }\n    \n    // Set Cesium Ion access token\n    window.Cesium.Ion.defaultAccessToken = CESIUM_ACCESS_TOKEN;\n    \n    // Initialize the Cesium Viewer\n    try {\n      // Make sure we don't have an existing viewer\n      if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n        viewerRef.current.destroy();\n      }\n      \n      console.log('Initializing Cesium viewer');\n      \n      // Create the Cesium viewer\n      const viewer = new window.Cesium.Viewer(cesiumContainerRef.current!, {\n        terrainProvider: window.Cesium.createWorldTerrain(),\n        imageryProvider: new window.Cesium.IonImageryProvider({\n          assetId: 2 // Bing Maps Aerial\n        }),\n        baseLayerPicker: false,\n        geocoder: false,\n        homeButton: false,\n        sceneModePicker: false,\n        navigationHelpButton: false,\n        animation: false,\n        timeline: false,\n        fullscreenButton: false,\n        vrButton: false,\n        selectionIndicator: false,\n        infoBox: false,\n        requestRenderMode: false,\n        maximumRenderTimeChange: Infinity,\n        targetFrameRate: 60\n      });\n      \n      // Store the viewer reference\n      viewerRef.current = viewer;\n      \n      // Set initial camera position to focus on India\n      viewer.camera.flyTo({\n        destination: window.Cesium.Cartesian3.fromDegrees(78.9629, 20.5937, 8000000),\n        orientation: {\n          heading: window.Cesium.Math.toRadians(0.0),\n          pitch: window.Cesium.Math.toRadians(-90.0),\n          roll: 0.0\n        },\n        duration: 2.0\n      });\n      \n      // Add click event handler to get weather at clicked location\n      viewer.screenSpaceEventHandler.setInputAction((click: any) => {\n        const cartesian = viewer.camera.pickEllipsoid(\n          click.position,\n          viewer.scene.globe.ellipsoid\n        );\n        \n        if (cartesian) {\n          const cartographic = window.Cesium.Cartographic.fromCartesian(cartesian);\n          const lon = window.Cesium.Math.toDegrees(cartographic.longitude);\n          const lat = window.Cesium.Math.toDegrees(cartographic.latitude);\n          \n          // Fetch weather for the clicked location\n          fetchWeatherData(lat, lon, 'Selected Location');\n        }\n      }, window.Cesium.ScreenSpaceEventType.LEFT_CLICK);\n      \n      // Fetch weather for default location (India)\n      fetchWeatherData(20.5937, 78.9629, 'India');\n      \n      // Set loading to false once viewer is initialized\n      setLoading(false);\n    } catch (error) {\n      console.error('Error initializing Cesium viewer:', error);\n      setError('Failed to initialize the Earth viewer. Please check your browser compatibility and try again.');\n      setLoading(false);\n    }\n    \n    // Cleanup function to destroy viewer when component unmounts\n    return () => {\n      if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n        viewerRef.current.destroy();\n        viewerRef.current = null;\n      }\n    };\n  }, []);\n  \n  // Handle zoom in\n  const handleZoomIn = () => {\n    if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n      const camera = viewerRef.current.camera;\n      const cameraHeight = camera.positionCartographic.height;\n      camera.zoomIn(cameraHeight * 0.2);\n    }\n  };\n  \n  // Handle zoom out\n  const handleZoomOut = () => {\n    if (viewerRef.current && !viewerRef.current.isDestroyed()) {\n      const camera = viewerRef.current.camera;\n      const cameraHeight = camera.positionCartographic.height;\n      camera.zoomOut(cameraHeight * 0.2);\n    }\n  };\n  \n  // Toggle play/pause\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  \n  return (\n    <Box sx={{ height: '100vh', width: '100vw', overflow: 'hidden', position: 'relative', bgcolor: '#000' }}>\n      {/* Cesium container - full screen with no borders */}\n      <div\n        ref={cesiumContainerRef}\n        style={{ width: '100%', height: '100%', position: 'absolute' }}\n      />\n      \n      {/* Left vertical toolbar with weather layer toggles - styled like Zoom Earth */}\n      {!loading && !error && (\n        <Paper\n          elevation={3}\n          sx={{\n            position: 'absolute',\n            top: 60,\n            left: 10,\n            width: 180,\n            bgcolor: 'rgba(33, 33, 33, 0.85)',\n            color: 'white',\n            borderRadius: 1,\n            overflow: 'hidden',\n            zIndex: 1000,\n          }}\n        >\n          <Box sx={{ \n            p: 1.5, \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'center',\n            borderBottom: '1px solid rgba(255,255,255,0.1)'\n          }}>\n            <Box sx={{ \n              width: 30, \n              height: 30, \n              borderRadius: '50%', \n              background: 'radial-gradient(circle, #4fc3f7, #0277bd)',\n              mr: 1.5,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}>\n              <Typography variant=\"body1\" sx={{ color: 'white', fontWeight: 'bold' }}>Z</Typography>\n            </Box>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', letterSpacing: 1 }}>\n              ZOOM EARTH\n            </Typography>\n          </Box>\n          \n          <Box sx={{ \n            p: 1, \n            borderBottom: '1px solid rgba(255,255,255,0.1)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}>\n            <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold' }}>\n              WEATHER MAPS\n            </Typography>\n            <IconButton size=\"small\" sx={{ color: 'white', p: 0 }}>\n              ▲\n            </IconButton>\n          </Box>\n          \n          <Box sx={{ p: 0 }}>\n            {[\n              { name: 'Satellite', value: 'Satellite' },\n              { name: 'Live', value: 'Live' },\n              { name: 'HD', value: 'HD' },\n              { name: 'Radar', value: 'Radar' },\n              { name: 'Precipitation', value: 'Precipitation' },\n              { name: 'Wind', value: 'Wind' },\n              { name: 'Temperature', value: 'Temperature' },\n              { name: 'Humidity', value: 'Humidity' },\n              { name: 'Pressure', value: 'Pressure' }\n            ].map((layer) => (\n              <Button\n                key={layer.value}\n                fullWidth\n                size=\"small\"\n                variant=\"text\"\n                onClick={() => switchImageryLayer(layer.value)}\n                sx={{\n                  justifyContent: 'flex-start',\n                  py: 1.2,\n                  px: 2,\n                  borderRadius: 0,\n                  bgcolor: activeLayer === layer.value ? 'rgba(70, 70, 70, 0.8)' : 'transparent',\n                  color: 'white',\n                  '&:hover': {\n                    bgcolor: 'rgba(70, 70, 70, 0.5)'\n                  },\n                  textTransform: 'none',\n                  fontWeight: activeLayer === layer.value ? 'bold' : 'normal',\n                  borderLeft: activeLayer === layer.value ? '3px solid #4fc3f7' : '3px solid transparent'\n                }}\n              >\n                <span style={{ marginRight: '12px', width: '16px', display: 'inline-block', textAlign: 'center' }}>\n                  {LAYER_ICONS[layer.value]}\n                </span>\n                {layer.name}\n              </Button>\n            ))}\n          </Box>\n        </Paper>\n      )}\n      \n      {/* Right vertical mini toolbar - styled like Zoom Earth */}\n      {!loading && !error && (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            right: 10,\n            transform: 'translateY(-50%)',\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1,\n            zIndex: 1000,\n          }}\n        >\n          <Paper\n            elevation={3}\n            sx={{\n              bgcolor: 'rgba(33, 33, 33, 0.85)',\n              color: 'white',\n              borderRadius: 28,\n              overflow: 'hidden',\n              display: 'flex',\n              flexDirection: 'column',\n              p: 1,\n            }}\n          >\n            <Tooltip title=\"Search\" placement=\"left\">\n              <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                🔍\n              </IconButton>\n            </Tooltip>\n            \n            <Tooltip title=\"Settings\" placement=\"left\">\n              <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                ⚙️\n              </IconButton>\n            </Tooltip>\n            \n            <Tooltip title=\"Info\" placement=\"left\">\n              <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                ℹ️\n              </IconButton>\n            </Tooltip>\n            \n            <Tooltip title=\"Share\" placement=\"left\">\n              <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                📤\n              </IconButton>\n            </Tooltip>\n            \n            <Tooltip title=\"Measure\" placement=\"left\">\n              <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                📏\n              </IconButton>\n            </Tooltip>\n            \n            <Tooltip title=\"Crosshair\" placement=\"left\">\n              <IconButton size=\"small\" sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}>\n                ⊕\n              </IconButton>\n            </Tooltip>\n          </Paper>\n          \n          <Paper\n            elevation={3}\n            sx={{\n              bgcolor: 'rgba(33, 33, 33, 0.85)',\n              color: 'white',\n              borderRadius: 28,\n              overflow: 'hidden',\n              display: 'flex',\n              flexDirection: 'column',\n              p: 1,\n              mt: 2\n            }}\n          >\n            <Tooltip title=\"Zoom In\" placement=\"left\">\n              <IconButton \n                size=\"small\" \n                sx={{ color: 'white', mb: 1.5, width: 40, height: 40 }}\n                onClick={handleZoomIn}\n              >\n                +\n              </IconButton>\n            </Tooltip>\n            \n            <Tooltip title=\"Zoom Out\" placement=\"left\">\n              <IconButton \n                size=\"small\" \n                sx={{ color: 'white', width: 40, height: 40 }}\n                onClick={handleZoomOut}\n              >\n                -\n              </IconButton>\n            </Tooltip>\n          </Paper>\n        </Box>\n      )}\n      \n      {/* Loading indicator */}\n      {loading && (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            bgcolor: 'rgba(0, 0, 0, 0.7)',\n            zIndex: 2000,\n          }}\n        >\n          <Box sx={{ textAlign: 'center', color: 'white' }}>\n            <CircularProgress color=\"inherit\" size={60} thickness={4} />\n            <Typography variant=\"h6\" sx={{ mt: 2 }}>\n              Loading Earth Viewer...\n            </Typography>\n          </Box>\n        </Box>\n      )}\n      \n      {/* Error message */}\n      {!loading && error && (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            bgcolor: 'rgba(0, 0, 0, 0.7)',\n            zIndex: 2000,\n            p: 3,\n          }}\n        >\n          <Paper sx={{ p: 3, maxWidth: 500, bgcolor: 'rgba(50, 50, 50, 0.9)', color: 'white' }}>\n            <Typography variant=\"h5\" sx={{ mb: 2, color: '#ff5252' }}>\n              Error Loading Earth Viewer\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n              {error}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => window.location.reload()}\n            >\n              Reload Page\n            </Button>\n          </Paper>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default EarthViewerPage;\n","/**\n * Weather Service for VisionEarth\n * Uses Open-Meteo API to fetch weather data\n */\n\n/**\n * Weather data interface for current weather\n */\nexport interface CurrentWeather {\n  temperature: number;\n  windspeed: number;\n  winddirection: number;\n  weathercode: number;\n  time: string;\n}\n\n/**\n * Weather data interface for the full response\n */\nexport interface WeatherData {\n  latitude: number;\n  longitude: number;\n  generationtime_ms: number;\n  utc_offset_seconds: number;\n  timezone: string;\n  timezone_abbreviation: string;\n  elevation: number;\n  current_weather: CurrentWeather;\n}\n\n/**\n * Fetch current weather data for a specific location\n * @param lat Latitude\n * @param lon Longitude\n * @returns Promise with current weather data\n */\nexport async function getCurrentWeather(lat: number, lon: number): Promise<CurrentWeather> {\n  const url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true&timezone=auto`;\n  \n  try {\n    const response = await fetch(url);\n    \n    if (!response.ok) {\n      throw new Error(`Weather API error: ${response.status}`);\n    }\n    \n    const data: WeatherData = await response.json();\n    return data.current_weather;\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n    throw error;\n  }\n}\n\n/**\n * Get weather data for multiple parameters\n * @param lat Latitude\n * @param lon Longitude\n * @param params Additional parameters (hourly, daily)\n * @returns Promise with weather data\n */\nexport async function getDetailedWeather(\n  lat: number, \n  lon: number, \n  params: {\n    hourly?: string[],\n    daily?: string[]\n  } = {}\n): Promise<any> {\n  let url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&timezone=auto`;\n  \n  // Add hourly parameters if provided\n  if (params.hourly && params.hourly.length > 0) {\n    url += `&hourly=${params.hourly.join(',')}`;\n  }\n  \n  // Add daily parameters if provided\n  if (params.daily && params.daily.length > 0) {\n    url += `&daily=${params.daily.join(',')}`;\n  }\n  \n  try {\n    const response = await fetch(url);\n    \n    if (!response.ok) {\n      throw new Error(`Weather API error: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching detailed weather data:', error);\n    throw error;\n  }\n}\n\n/**\n * Get weather code description\n * @param code WMO weather code\n * @returns Description of the weather code\n */\nexport function getWeatherDescription(code: number): string {\n  const weatherCodes: Record<number, string> = {\n    0: 'Clear sky',\n    1: 'Mainly clear',\n    2: 'Partly cloudy',\n    3: 'Overcast',\n    45: 'Fog',\n    48: 'Depositing rime fog',\n    51: 'Light drizzle',\n    53: 'Moderate drizzle',\n    55: 'Dense drizzle',\n    56: 'Light freezing drizzle',\n    57: 'Dense freezing drizzle',\n    61: 'Slight rain',\n    63: 'Moderate rain',\n    65: 'Heavy rain',\n    66: 'Light freezing rain',\n    67: 'Heavy freezing rain',\n    71: 'Slight snow fall',\n    73: 'Moderate snow fall',\n    75: 'Heavy snow fall',\n    77: 'Snow grains',\n    80: 'Slight rain showers',\n    81: 'Moderate rain showers',\n    82: 'Violent rain showers',\n    85: 'Slight snow showers',\n    86: 'Heavy snow showers',\n    95: 'Thunderstorm',\n    96: 'Thunderstorm with slight hail',\n    99: 'Thunderstorm with heavy hail'\n  };\n  \n  return weatherCodes[code] || 'Unknown';\n}\n","import React, { useState } from 'react';\nimport { \n  Box, \n  Typography, \n  Grid, \n  Card, \n  CardContent, \n  CardMedia, \n  Chip,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  ButtonGroup,\n  Divider,\n  IconButton,\n  TextField,\n  InputAdornment,\n  Tab,\n  Tabs,\n  Stack,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent,\n  LinearProgress\n} from '@mui/material';\nimport { \n  Search, \n  FilterList, \n  MapOutlined, \n  TableChartOutlined, \n  BarChartOutlined,\n  NavigateNext,\n  NavigateBefore,\n  CalendarToday,\n  Warning,\n  Info,\n  ErrorOutline,\n  CheckCircleOutline,\n  RestoreOutlined\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\n\n// Mock data for anomalies\nconst mockAnomalies = [\n  {\n    id: 1,\n    type: 'wildfire',\n    location: 'Amazon Rainforest, Brazil',\n    coordinates: [-59.85, -2.91],\n    detectionDate: new Date(2025, 4, 22),\n    severity: 'high',\n    status: 'detected',\n    confidenceScore: 0.94,\n    description: 'Active wildfire detected covering approximately 3.2 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1615414037094-494fa44a6f50?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2071&q=80'\n  },\n  {\n    id: 2,\n    type: 'deforestation',\n    location: 'Congo Basin, DRC',\n    coordinates: [23.65, -0.23],\n    detectionDate: new Date(2025, 4, 20),\n    severity: 'medium',\n    status: 'verified',\n    confidenceScore: 0.89,\n    description: 'Detected significant forest clearing activities covering 5.7 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1621451497513-28595d129eef?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80'\n  },\n  {\n    id: 3,\n    type: 'oil_spill',\n    location: 'Gulf of Mexico',\n    coordinates: [-90.28, 28.73],\n    detectionDate: new Date(2025, 4, 18),\n    severity: 'high',\n    status: 'responding',\n    confidenceScore: 0.92,\n    description: 'Oil spill detected approximately 80 miles off the coast, covering 12.3 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1581905192180-99cedf951aae?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2040&q=80'\n  },\n  {\n    id: 4,\n    type: 'flood',\n    location: 'Mekong Delta, Vietnam',\n    coordinates: [105.78, 10.03],\n    detectionDate: new Date(2025, 4, 15),\n    severity: 'medium',\n    status: 'monitored',\n    confidenceScore: 0.87,\n    description: 'Unusual flooding detected in agricultural areas covering approximately 18.5 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1547683906-3a7b01d78966?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80'\n  },\n  {\n    id: 5,\n    type: 'algal_bloom',\n    location: 'Lake Erie, USA',\n    coordinates: [-82.67, 41.65],\n    detectionDate: new Date(2025, 4, 10),\n    severity: 'low',\n    status: 'resolved',\n    confidenceScore: 0.85,\n    description: 'Harmful algal bloom detected covering approximately 22.7 sq km',\n    imageUrl: 'https://images.unsplash.com/photo-1572381235456-a72d911af084?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80'\n  },\n  {\n    id: 6,\n    type: 'drought',\n    location: 'California Central Valley, USA',\n    coordinates: [-119.27, 36.78],\n    detectionDate: new Date(2025, 4, 5),\n    severity: 'high',\n    status: 'verified',\n    confidenceScore: 0.91,\n    description: 'Severe drought conditions detected across agricultural region',\n    imageUrl: 'https://images.unsplash.com/photo-1589149736049-26a4b34bdf15?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2069&q=80'\n  }\n];\n\n// Helper function for severity color\nconst getSeverityColor = (severity: string) => {\n  switch (severity) {\n    case 'high':\n      return 'error';\n    case 'medium':\n      return 'warning';\n    case 'low':\n      return 'success';\n    default:\n      return 'default';\n  }\n};\n\n// Helper function for status icon\nconst getStatusIcon = (status: string) => {\n  switch (status) {\n    case 'detected':\n      return <Warning color=\"error\" />;\n    case 'verified':\n      return <Info color=\"info\" />;\n    case 'responding':\n      return <ErrorOutline color=\"warning\" />;\n    case 'monitored':\n      return <RestoreOutlined color=\"info\" />;\n    case 'resolved':\n      return <CheckCircleOutline color=\"success\" />;\n    default:\n      return null;\n  }\n};\n\nconst AnomalyDashboardPage: React.FC = () => {\n  const navigate = useNavigate();\n  \n  // State variables\n  const [view, setView] = useState<number>(0); // 0=cards, 1=table, 2=map\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n  const [severityFilter, setSeverityFilter] = useState<string>('all');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [dateRange, setDateRange] = useState<string>('all');\n  \n  // Filtered anomalies based on search and filters\n  const filteredAnomalies = mockAnomalies.filter(anomaly => {\n    // Search query filter\n    if (searchQuery && !anomaly.location.toLowerCase().includes(searchQuery.toLowerCase()) &&\n        !anomaly.description.toLowerCase().includes(searchQuery.toLowerCase()) &&\n        !anomaly.type.toLowerCase().includes(searchQuery.toLowerCase())) {\n      return false;\n    }\n    \n    // Type filter\n    if (typeFilter !== 'all' && anomaly.type !== typeFilter) {\n      return false;\n    }\n    \n    // Severity filter\n    if (severityFilter !== 'all' && anomaly.severity !== severityFilter) {\n      return false;\n    }\n    \n    // Status filter\n    if (statusFilter !== 'all' && anomaly.status !== statusFilter) {\n      return false;\n    }\n    \n    // Date range filter (simplified for now)\n    if (dateRange === 'today') {\n      const today = new Date();\n      return anomaly.detectionDate.toDateString() === today.toDateString();\n    } else if (dateRange === 'week') {\n      const weekAgo = new Date();\n      weekAgo.setDate(weekAgo.getDate() - 7);\n      return anomaly.detectionDate >= weekAgo;\n    } else if (dateRange === 'month') {\n      const monthAgo = new Date();\n      monthAgo.setMonth(monthAgo.getMonth() - 1);\n      return anomaly.detectionDate >= monthAgo;\n    }\n    \n    return true;\n  });\n  \n  // Handle filter changes\n  const handleTypeFilterChange = (event: SelectChangeEvent) => {\n    setTypeFilter(event.target.value);\n  };\n  \n  const handleSeverityFilterChange = (event: SelectChangeEvent) => {\n    setSeverityFilter(event.target.value);\n  };\n  \n  const handleStatusFilterChange = (event: SelectChangeEvent) => {\n    setStatusFilter(event.target.value);\n  };\n  \n  const handleDateRangeChange = (event: SelectChangeEvent) => {\n    setDateRange(event.target.value);\n  };\n  \n  // Handle search query change\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n  \n  // Handle view change\n  const handleViewChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setView(newValue);\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Environmental Anomaly Dashboard\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          AI-detected environmental events requiring attention and monitoring\n        </Typography>\n      </Box>\n      \n      {/* Statistics Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Total Anomalies\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {mockAnomalies.length}\n            </Typography>\n            <LinearProgress variant=\"determinate\" value={100} color=\"primary\" />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              High Severity\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {mockAnomalies.filter(a => a.severity === 'high').length}\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={(mockAnomalies.filter(a => a.severity === 'high').length / mockAnomalies.length) * 100} \n              color=\"error\" \n            />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Active Monitoring\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {mockAnomalies.filter(a => a.status !== 'resolved').length}\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={(mockAnomalies.filter(a => a.status !== 'resolved').length / mockAnomalies.length) * 100} \n              color=\"warning\" \n            />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={3}>\n          <Paper sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              Avg. Confidence\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1 }}>\n              {(mockAnomalies.reduce((acc, cur) => acc + cur.confidenceScore, 0) / mockAnomalies.length * 100).toFixed(1)}%\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={(mockAnomalies.reduce((acc, cur) => acc + cur.confidenceScore, 0) / mockAnomalies.length) * 100} \n              color=\"info\" \n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      \n      {/* Filters and Search */}\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} md={3}>\n            <TextField\n              fullWidth\n              placeholder=\"Search anomalies...\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Search />\n                  </InputAdornment>\n                ),\n              }}\n              size=\"small\"\n            />\n          </Grid>\n          \n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"type-filter-label\">Type</InputLabel>\n              <Select\n                labelId=\"type-filter-label\"\n                value={typeFilter}\n                label=\"Type\"\n                onChange={handleTypeFilterChange}\n              >\n                <MenuItem value=\"all\">All Types</MenuItem>\n                <MenuItem value=\"wildfire\">Wildfire</MenuItem>\n                <MenuItem value=\"deforestation\">Deforestation</MenuItem>\n                <MenuItem value=\"oil_spill\">Oil Spill</MenuItem>\n                <MenuItem value=\"flood\">Flood</MenuItem>\n                <MenuItem value=\"algal_bloom\">Algal Bloom</MenuItem>\n                <MenuItem value=\"drought\">Drought</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"severity-filter-label\">Severity</InputLabel>\n              <Select\n                labelId=\"severity-filter-label\"\n                value={severityFilter}\n                label=\"Severity\"\n                onChange={handleSeverityFilterChange}\n              >\n                <MenuItem value=\"all\">All Severities</MenuItem>\n                <MenuItem value=\"high\">High</MenuItem>\n                <MenuItem value=\"medium\">Medium</MenuItem>\n                <MenuItem value=\"low\">Low</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"status-filter-label\">Status</InputLabel>\n              <Select\n                labelId=\"status-filter-label\"\n                value={statusFilter}\n                label=\"Status\"\n                onChange={handleStatusFilterChange}\n              >\n                <MenuItem value=\"all\">All Statuses</MenuItem>\n                <MenuItem value=\"detected\">Detected</MenuItem>\n                <MenuItem value=\"verified\">Verified</MenuItem>\n                <MenuItem value=\"responding\">Responding</MenuItem>\n                <MenuItem value=\"monitored\">Monitored</MenuItem>\n                <MenuItem value=\"resolved\">Resolved</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel id=\"date-range-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"date-range-label\"\n                value={dateRange}\n                label=\"Date Range\"\n                onChange={handleDateRangeChange}\n              >\n                <MenuItem value=\"all\">All Time</MenuItem>\n                <MenuItem value=\"today\">Today</MenuItem>\n                <MenuItem value=\"week\">Past Week</MenuItem>\n                <MenuItem value=\"month\">Past Month</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} md={1}>\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <ButtonGroup size=\"small\">\n                <Button\n                  variant={view === 0 ? \"contained\" : \"outlined\"}\n                  onClick={() => setView(0)}\n                >\n                  <TableChartOutlined fontSize=\"small\" />\n                </Button>\n                <Button\n                  variant={view === 1 ? \"contained\" : \"outlined\"}\n                  onClick={() => setView(1)}\n                >\n                  <MapOutlined fontSize=\"small\" />\n                </Button>\n                <Button\n                  variant={view === 2 ? \"contained\" : \"outlined\"}\n                  onClick={() => setView(2)}\n                >\n                  <BarChartOutlined fontSize=\"small\" />\n                </Button>\n              </ButtonGroup>\n            </Box>\n          </Grid>\n        </Grid>\n      </Paper>\n      \n      {/* Tabs for different views */}\n      <Paper sx={{ mb: 3 }}>\n        <Tabs value={view} onChange={handleViewChange} aria-label=\"anomaly view tabs\">\n          <Tab label=\"Card View\" />\n          <Tab label=\"Map View\" />\n          <Tab label=\"Analytics\" />\n        </Tabs>\n      </Paper>\n      \n      {/* Card View */}\n      {view === 0 && (\n        <Grid container spacing={3}>\n          {filteredAnomalies.map(anomaly => (\n            <Grid item key={anomaly.id} xs={12} md={6} lg={4}>\n              <Card sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                <CardMedia\n                  component=\"img\"\n                  height=\"200\"\n                  image={anomaly.imageUrl}\n                  alt={anomaly.type}\n                />\n                <CardContent sx={{ flexGrow: 1 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\n                      {anomaly.type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                    </Typography>\n                    <Chip \n                      label={anomaly.severity.toUpperCase()} \n                      color={getSeverityColor(anomaly.severity) as any}\n                      size=\"small\"\n                    />\n                  </Box>\n                  \n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\n                    {getStatusIcon(anomaly.status)}\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Status: {anomaly.status.replace(/\\b\\w/g, l => l.toUpperCase())}\n                    </Typography>\n                  </Stack>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    Location: {anomaly.location}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    Detected: {format(anomaly.detectionDate, 'PPP')}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    Confidence: {(anomaly.confidenceScore * 100).toFixed(1)}%\n                  </Typography>\n                  \n                  <Divider sx={{ my: 2 }} />\n                  \n                  <Typography variant=\"body1\">\n                    {anomaly.description}\n                  </Typography>\n                </CardContent>\n                <Box sx={{ p: 2, pt: 0 }}>\n                  <Button \n                    variant=\"contained\" \n                    fullWidth\n                    onClick={() => navigate(`/earth?anomaly=${anomaly.id}`)}\n                  >\n                    View on Earth\n                  </Button>\n                </Box>\n              </Card>\n            </Grid>\n          ))}\n          \n          {filteredAnomalies.length === 0 && (\n            <Grid item xs={12}>\n              <Paper sx={{ p: 4, textAlign: 'center' }}>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                  No anomalies found matching your filters\n                </Typography>\n                <Button \n                  variant=\"outlined\" \n                  sx={{ mt: 2 }}\n                  onClick={() => {\n                    setSearchQuery('');\n                    setTypeFilter('all');\n                    setSeverityFilter('all');\n                    setStatusFilter('all');\n                    setDateRange('all');\n                  }}\n                >\n                  Clear Filters\n                </Button>\n              </Paper>\n            </Grid>\n          )}\n        </Grid>\n      )}\n      \n      {/* Map View - In a real implementation, this would be a map component */}\n      {view === 1 && (\n        <Paper sx={{ p: 2, height: 600, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Box sx={{ textAlign: 'center' }}>\n            <MapOutlined sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n            <Typography variant=\"h6\">\n              Map View\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              In the full implementation, this would display anomalies on an interactive map\n            </Typography>\n            <Button \n              variant=\"contained\" \n              sx={{ mt: 2 }}\n              onClick={() => navigate('/earth')}\n            >\n              View in Earth Viewer\n            </Button>\n          </Box>\n        </Paper>\n      )}\n      \n      {/* Analytics View - In a real implementation, this would show charts and statistics */}\n      {view === 2 && (\n        <Paper sx={{ p: 2, height: 600, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Box sx={{ textAlign: 'center' }}>\n            <BarChartOutlined sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n            <Typography variant=\"h6\">\n              Analytics View\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              In the full implementation, this would display charts and statistics about anomalies\n            </Typography>\n          </Box>\n        </Paper>\n      )}\n      \n      {/* Pagination */}\n      <Box sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\n        <ButtonGroup variant=\"outlined\">\n          <Button startIcon={<NavigateBefore />}>\n            Previous\n          </Button>\n          <Button endIcon={<NavigateNext />}>\n            Next\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AnomalyDashboardPage;\n","import React from 'react';\nimport { Box, Typography, Container, Grid, Card, CardContent, CardMedia, Chip, Stack } from '@mui/material';\n\nconst DataCatalogPage: React.FC = () => {\n  // This would be fetched from an API in a real implementation\n  const dataSources = [\n    {\n      id: 1,\n      name: 'NASA MODIS',\n      description: 'Moderate Resolution Imaging Spectroradiometer data providing global imagery',\n      type: 'Satellite',\n      updateFrequency: 'Daily',\n      resolution: '250m-1km',\n      coverage: 'Global',\n      image: 'https://eoimages.gsfc.nasa.gov/images/imagerecords/73000/73751/world.topo.bathy.200407.3x5400x2700.jpg'\n    },\n    {\n      id: 2,\n      name: 'NOAA Weather Data',\n      description: 'Global weather measurements including temperature, precipitation, and wind',\n      type: 'Weather',\n      updateFrequency: 'Hourly',\n      resolution: 'Variable',\n      coverage: 'Global',\n      image: 'https://www.ncei.noaa.gov/sites/default/files/2023-04/FY21_NCEI_DataMap_ALL_0.jpg'\n    },\n    {\n      id: 3,\n      name: 'Sentinel-2',\n      description: 'High-resolution optical imagery for land monitoring',\n      type: 'Satellite',\n      updateFrequency: '5 days',\n      resolution: '10m',\n      coverage: 'Global land surfaces',\n      image: 'https://sentinels.copernicus.eu/documents/247904/2560237/Sentinel-2-image-Austria-Vienna.jpg'\n    },\n    {\n      id: 4,\n      name: 'Global Fire Data',\n      description: 'Active fire detection and burned area mapping',\n      type: 'Anomaly',\n      updateFrequency: 'Daily',\n      resolution: '375m',\n      coverage: 'Global',\n      image: 'https://earthobservatory.nasa.gov/ContentWOC/images/globalmaps/fire_avg_2001-2018.jpg'\n    },\n    {\n      id: 5,\n      name: 'Global Forest Watch',\n      description: 'Deforestation and forest change monitoring',\n      type: 'Anomaly',\n      updateFrequency: 'Weekly',\n      resolution: '30m',\n      coverage: 'Global forests',\n      image: 'https://wri-datalab.s3.amazonaws.com/manual/gfw-help-center/Forest_sideview.jpg'\n    },\n    {\n      id: 6,\n      name: 'Global Flood Database',\n      description: 'Historical and real-time flood extent mapping',\n      type: 'Anomaly',\n      updateFrequency: 'As available',\n      resolution: '30m',\n      coverage: 'Global',\n      image: 'https://reliefweb.int/sites/default/files/styles/large_landscape/public/previews/95/27/95271a71-f8fc-3c2d-91a5-9a3f57f95b5e.png'\n    }\n  ];\n\n  // Group data sources by type\n  const groupedSources = dataSources.reduce((acc, source) => {\n    if (!acc[source.type]) {\n      acc[source.type] = [];\n    }\n    acc[source.type].push(source);\n    return acc;\n  }, {} as Record<string, typeof dataSources>);\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Data Catalog\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n        Browse the available data sources in the VisionEarth platform. These datasets are used to visualize environmental conditions and detect anomalies.\n      </Typography>\n\n      {Object.entries(groupedSources).map(([type, sources]) => (\n        <Box key={type} sx={{ mb: 6 }}>\n          <Typography variant=\"h5\" component=\"h2\" sx={{ mb: 2, mt: 4 }}>\n            {type} Data\n          </Typography>\n          <Grid container spacing={3}>\n            {sources.map((source) => (\n              <Grid item xs={12} md={6} key={source.id}>\n                <Card sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image={source.image}\n                    alt={source.name}\n                    sx={{ objectFit: 'cover' }}\n                  />\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                      {source.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                      {source.description}\n                    </Typography>\n                    <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" gap={1}>\n                      <Chip label={`Update: ${source.updateFrequency}`} size=\"small\" />\n                      <Chip label={`Resolution: ${source.resolution}`} size=\"small\" />\n                      <Chip label={`Coverage: ${source.coverage}`} size=\"small\" />\n                    </Stack>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      ))}\n    </Container>\n  );\n};\n\nexport default DataCatalogPage;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  Switch,\n  FormControlLabel,\n  Divider,\n  Slider,\n  TextField,\n  Button,\n  Grid,\n  Select,\n  SelectChangeEvent,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Alert\n} from '@mui/material';\n\nconst SettingsPage: React.FC = () => {\n  // These would be fetched from and saved to a backend in a real implementation\n  const [settings, setSettings] = useState({\n    theme: 'dark',\n    dataSourceRefreshInterval: 15,\n    enableNotifications: true,\n    notificationsForAnomalyDetection: true,\n    notificationsForDataUpdates: false,\n    maxQualityMode: false,\n    defaultLocation: {\n      lat: 37.7749,\n      lng: -122.4194,\n      zoom: 4\n    },\n    cesiumToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlYWE1OWUxNy1mMWY0LTQzN2YtOGNkNC0yYTVmZjEwZGJmM2QiLCJpZCI6MTYyMTY3LCJpYXQiOjE2OTY5MDk2MTZ9.jaESQs38ACb1-OXgPt-FA-lARxYzBr_NLzEEZ7C27KQ',\n    apiEndpoints: {\n      weather: '/api/v1/weather',\n      satellite: '/api/v1/satellite',\n      anomalies: '/api/v1/anomalies'\n    },\n    highResImagery: false,\n    weatherOverlay: false,\n    countryBorders: false,\n    autoRefresh: false,\n    dataSource: 'NASA Earth Observations',\n    limitFrameRate: false,\n    reduceAnimations: false,\n    cloudSync: false\n  });\n\n  const [saved, setSaved] = useState(false);\n\n  const handleChange = (key: string, value: any) => {\n    setSettings({\n      ...settings,\n      [key]: value\n    });\n    setSaved(false);\n  };\n\n  const handleNestedChange = (parent: string, key: string, value: any) => {\n    setSettings((prevSettings) => ({\n      ...prevSettings,\n      [parent]: {\n        ...(prevSettings[parent as keyof typeof prevSettings] as Record<string, any>),\n        [key]: value\n      }\n    }));\n    setSaved(false);\n  };\n\n\n  const handleCheckboxChange = (setting: keyof typeof settings) => {\n    setSettings({\n      ...settings,\n      [setting]: !settings[setting as keyof typeof settings]\n    });\n    setSaved(false);\n  };\n\n  const handleSelectChange = (event: SelectChangeEvent) => {\n    setSettings({\n      ...settings,\n      dataSource: event.target.value as string\n    });\n    setSaved(false);\n  };\n\n  const handleSaveSettings = () => {\n    // In a real application, this would save to a backend API\n    console.log('Saving settings:', settings);\n    setSaved(true);\n    \n    // Reset the saved notification after 3 seconds\n    setTimeout(() => {\n      setSaved(false);\n    }, 3000);\n  };\n\n  const clearCache = () => {\n    console.log('Clearing cache...');\n    // Implement cache clearing logic\n  };\n\n  const resetSettings = () => {\n    setSettings({\n      theme: 'dark',\n      dataSourceRefreshInterval: 15,\n      enableNotifications: true,\n      notificationsForAnomalyDetection: true,\n      notificationsForDataUpdates: false,\n      maxQualityMode: false,\n      defaultLocation: {\n        lat: 37.7749,\n        lng: -122.4194,\n        zoom: 4\n      },\n      cesiumToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlYWE1OWUxNy1mMWY0LTQzN2YtOGNkNC0yYTVmZjEwZGJmM2QiLCJpZCI6MTYyMTY3LCJpYXQiOjE2OTY5MDk2MTZ9.jaESQs38ACb1-OXgPt-FA-lARxYzBr_NLzEEZ7C27KQ',\n      apiEndpoints: {\n        weather: '/api/v1/weather',\n        satellite: '/api/v1/satellite',\n        anomalies: '/api/v1/anomalies'\n      },\n      dataSource: 'NASA Earth Observations',\n      highResImagery: false,\n      weatherOverlay: false,\n      countryBorders: false,\n      autoRefresh: false,\n      limitFrameRate: false,\n      reduceAnimations: false,\n      cloudSync: false\n    });\n    console.log('Settings reset');\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Settings\n      </Typography>\n      \n      {saved && (\n        <Alert severity=\"success\" sx={{ mb: 3 }}>\n          Settings saved successfully!\n        </Alert>\n      )}\n      \n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Appearance\n        </Typography>\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel id=\"theme-label\">Theme</InputLabel>\n          <Select\n            labelId=\"theme-label\"\n            value={settings.theme}\n            label=\"Theme\"\n            onChange={(e) => handleChange('theme', e.target.value)}\n          >\n            <MenuItem value=\"dark\">Dark</MenuItem>\n            <MenuItem value=\"light\">Light</MenuItem>\n            <MenuItem value=\"system\">System Default</MenuItem>\n          </Select>\n        </FormControl>\n        \n        <FormControlLabel\n          control={\n            <Switch\n              checked={settings.maxQualityMode}\n              onChange={(e) => handleChange('maxQualityMode', e.target.checked)}\n            />\n          }\n          label=\"High Quality Mode (may affect performance)\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.highResImagery}\n              onChange={() => handleCheckboxChange('highResImagery')}\n            /> \n          }\n          label=\"Enable High Resolution Imagery\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.weatherOverlay}\n              onChange={() => handleCheckboxChange('weatherOverlay')}\n            /> \n          }\n          label=\"Enable Weather Overlay\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.countryBorders}\n              onChange={() => handleCheckboxChange('countryBorders')}\n            /> \n          }\n          label=\"Enable Country Borders\"\n          sx={{ mt: 2 }}\n        />\n      </Paper>\n      \n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Data & Updates\n        </Typography>\n        \n        <Box sx={{ mb: 2 }}>\n          <Typography id=\"data-refresh-slider\" gutterBottom>\n            Data Source Refresh Interval (minutes)\n          </Typography>\n          <Slider\n            value={settings.dataSourceRefreshInterval}\n            onChange={(_, value) => handleChange('dataSourceRefreshInterval', value)}\n            aria-labelledby=\"data-refresh-slider\"\n            valueLabelDisplay=\"auto\"\n            step={5}\n            marks\n            min={5}\n            max={60}\n          />\n        </Box>\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.autoRefresh}\n              onChange={() => handleCheckboxChange('autoRefresh')}\n            /> \n          }\n          label=\"Auto-refresh Data (every 10 minutes)\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel id=\"data-source-label\">Data Source</InputLabel>\n          <Select\n            labelId=\"data-source-label\"\n            value={settings.dataSource}\n            label=\"Data Source\"\n            onChange={handleSelectChange}\n          >\n            <MenuItem value=\"NASA Earth Observations\">NASA Earth Observations</MenuItem>\n            <MenuItem value=\"Other\">Other</MenuItem>\n          </Select>\n        </FormControl>\n        \n        <Divider sx={{ my: 3 }} />\n        \n        <Typography variant=\"subtitle1\" gutterBottom>\n          Notifications\n        </Typography>\n        \n        <FormControlLabel\n          control={\n            <Switch\n              checked={settings.enableNotifications}\n              onChange={(e) => handleChange('enableNotifications', e.target.checked)}\n            />\n          }\n          label=\"Enable Notifications\"\n        />\n        \n        <Box sx={{ pl: 3, mt: 1 }}>\n          <FormControlLabel\n            control={\n              <Switch\n                disabled={!settings.enableNotifications}\n                checked={settings.notificationsForAnomalyDetection}\n                onChange={(e) => handleChange('notificationsForAnomalyDetection', e.target.checked)}\n              />\n            }\n            label=\"Anomaly Detection Alerts\"\n          />\n          \n          <FormControlLabel\n            control={\n              <Switch\n                disabled={!settings.enableNotifications}\n                checked={settings.notificationsForDataUpdates}\n                onChange={(e) => handleChange('notificationsForDataUpdates', e.target.checked)}\n              />\n            }\n            label=\"Data Source Update Notifications\"\n          />\n          \n          <FormControlLabel\n            control={\n              <input \n                type=\"checkbox\" \n                checked={settings.cloudSync}\n                onChange={() => handleCheckboxChange('cloudSync')}\n              /> \n            }\n            label=\"Enable Cloud Sync\"\n          />\n        </Box>\n      </Paper>\n      \n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Performance\n        </Typography>\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.limitFrameRate}\n              onChange={() => handleCheckboxChange('limitFrameRate')}\n            /> \n          }\n          label=\"Limit Frame Rate\"\n          sx={{ mt: 2 }}\n        />\n        \n        <FormControlLabel\n          control={\n            <input \n              type=\"checkbox\" \n              checked={settings.reduceAnimations}\n              onChange={() => handleCheckboxChange('reduceAnimations')}\n            /> \n          }\n          label=\"Reduce Animations\"\n          sx={{ mt: 2 }}\n        />\n      </Paper>\n      \n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          API Configuration\n        </Typography>\n        \n        <TextField\n          fullWidth\n          label=\"Cesium Ion Access Token\"\n          value={settings.cesiumToken}\n          onChange={(e) => handleChange('cesiumToken', e.target.value)}\n          margin=\"normal\"\n          type=\"password\"\n        />\n        \n        <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>\n          API Endpoints\n        </Typography>\n        \n        <TextField\n          fullWidth\n          label=\"Weather API Endpoint\"\n          value={settings.apiEndpoints.weather}\n          onChange={(e) => handleNestedChange('apiEndpoints', 'weather', e.target.value)}\n          margin=\"normal\"\n        />\n        \n        <TextField\n          fullWidth\n          label=\"Satellite API Endpoint\"\n          value={settings.apiEndpoints.satellite}\n          onChange={(e) => handleNestedChange('apiEndpoints', 'satellite', e.target.value)}\n          margin=\"normal\"\n        />\n        \n        <TextField\n          fullWidth\n          label=\"Anomalies API Endpoint\"\n          value={settings.apiEndpoints.anomalies}\n          onChange={(e) => handleNestedChange('apiEndpoints', 'anomalies', e.target.value)}\n          margin=\"normal\"\n        />\n      </Paper>\n      \n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={handleSaveSettings}\n        >\n          Save Settings\n        </Button>\n        <Button \n          variant=\"outlined\" \n          onClick={clearCache} \n          sx={{ mr: 2 }}\n        >\n          Clear Cache\n        </Button>\n        <Button \n          variant=\"outlined\" \n          onClick={resetSettings}\n        >\n          Reset Settings\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SettingsPage;\n","import React from 'react';\nimport { Box, Typography, Button, Container } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage: React.FC = () => {\n  return (\n    <Container maxWidth=\"md\">\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '70vh',\n          textAlign: 'center',\n        }}\n      >\n        <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n          404\n        </Typography>\n        <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n          Page Not Found\n        </Typography>\n        <Typography variant=\"body1\" paragraph sx={{ mb: 4 }}>\n          The page you are looking for does not exist or has been moved.\n        </Typography>\n        <Button\n          component={Link}\n          to=\"/\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n        >\n          Back to Home\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Box, Typography, Paper, Button } from '@mui/material';\n\nconst TestPage: React.FC = () => {\n  return (\n    <Box sx={{ padding: 4 }}>\n      <Paper sx={{ padding: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          VisionEarth Test Page\n        </Typography>\n        <Typography variant=\"body1\" paragraph>\n          This is a simple test page to verify that the VisionEarth application is working correctly.\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\">\n          Test Button\n        </Button>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default TestPage;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\n// Import components\r\nimport Layout from './components/Layout';\r\nimport EarthViewerPage from './pages/EarthViewerPage';\r\nimport AnomalyDashboardPage from './pages/AnomalyDashboardPage';\r\nimport DataCatalogPage from './pages/DataCatalogPage';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\nimport TestPage from './pages/TestPage';\r\n\r\n// Create React Query client\r\nconst queryClient = new QueryClient();\r\n\r\n// Create theme\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#5cbbf2',\r\n    },\r\n    secondary: {\r\n      main: '#4ade80',\r\n    },\r\n    background: {\r\n      default: '#0f172a',\r\n      paper: '#1e293b',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    h1: {\r\n      fontSize: '2.5rem',\r\n      fontWeight: 600,\r\n    },\r\n    h2: {\r\n      fontSize: '2rem',\r\n      fontWeight: 600,\r\n    },\r\n    h3: {\r\n      fontSize: '1.75rem',\r\n      fontWeight: 600,\r\n    },\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        body: {\r\n          overflow: 'hidden',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <Layout>\r\n            <Routes>\r\n              <Route path=\"/\" element={<EarthViewerPage />} />\r\n              <Route path=\"/anomalies\" element={<AnomalyDashboardPage />} />\r\n              <Route path=\"/catalog\" element={<DataCatalogPage />} />\r\n              <Route path=\"/settings\" element={<SettingsPage />} />\r\n              <Route path=\"/test\" element={<TestPage />} />\r\n              <Route path=\"*\" element={<NotFoundPage />} />\r\n            </Routes>\r\n          </Layout>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}